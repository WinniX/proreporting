/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
	"time"
)

// ReservationModel struct for ReservationModel
type ReservationModel struct {
	// Reservation id
	Id string `json:"id"`
	// Booking id
	BookingId string `json:"bookingId"`
	// Block id
	BlockId *string `json:"blockId,omitempty"`
	// Name of the group
	GroupName *string `json:"groupName,omitempty"`
	// Status of the reservation
	Status string `json:"status"`
	// Time of check-in<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	CheckInTime *time.Time `json:"checkInTime,omitempty"`
	// Time of check-out<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	CheckOutTime *time.Time `json:"checkOutTime,omitempty"`
	// Time of cancellation, if the reservation was canceled<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	CancellationTime *time.Time `json:"cancellationTime,omitempty"`
	// Time of setting no-show reservation status<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	NoShowTime *time.Time `json:"noShowTime,omitempty"`
	Unit *EmbeddedUnitModel `json:"unit,omitempty"`
	Property EmbeddedPropertyModel `json:"property"`
	RatePlan EmbeddedRatePlanModel `json:"ratePlan"`
	UnitGroup EmbeddedUnitGroupModel `json:"unitGroup"`
	TotalGrossAmount MonetaryValueModel `json:"totalGrossAmount"`
	// Date of arrival<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	Arrival time.Time `json:"arrival"`
	// Date of departure<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	Departure time.Time `json:"departure"`
	// Date of creation<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	Created time.Time `json:"created"`
	// Date of last modification<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	Modified time.Time `json:"modified"`
	// Number of adults
	Adults int32 `json:"adults"`
	// The ages of the children
	ChildrenAges *[]int32 `json:"childrenAges,omitempty"`
	// Additional information and comments
	Comment *string `json:"comment,omitempty"`
	// Additional information and comment by the guest
	GuestComment *string `json:"guestComment,omitempty"`
	// Code in external system
	ExternalCode *string `json:"externalCode,omitempty"`
	// Channel code
	ChannelCode string `json:"channelCode"`
	// Source of the reservation (e.g Hotels.com, Orbitz, etc.)
	Source *string `json:"source,omitempty"`
	PrimaryGuest *GuestModel `json:"primaryGuest,omitempty"`
	// Additional guests of the reservation.
	AdditionalGuests *[]GuestModel `json:"additionalGuests,omitempty"`
	Booker *BookerModel `json:"booker,omitempty"`
	PaymentAccount *PaymentAccountModel `json:"paymentAccount,omitempty"`
	// The list of time slices with the reserved units / unit groups for the stay
	TimeSlices *[]TimeSliceModel `json:"timeSlices,omitempty"`
	// The list of additional services (extras, add-ons) reserved for the stay
	Services *[]ReservationServiceItemModel `json:"services,omitempty"`
	// The strongest guarantee for the rate plans booked in this reservation
	GuaranteeType string `json:"guaranteeType"`
	CancellationFee ReservationCancellationFeeModel `json:"cancellationFee"`
	NoShowFee ReservationNoShowFeeModel `json:"noShowFee"`
	// The purpose of the trip, leisure or business
	TravelPurpose *string `json:"travelPurpose,omitempty"`
	Balance MonetaryValueModel `json:"balance"`
	// The list of units assigned to this reservation
	AssignedUnits *[]ReservationAssignedUnitModel `json:"assignedUnits,omitempty"`
	// Validation rules are applied to reservations during their lifetime.  For example a reservation that was created while the house or unit group is already fully booked.  Whenever a rule was or is currently violated, a validation message will be added to this list.  They can be deleted whenever the hotel staff worked them off.
	ValidationMessages *[]ReservationValidationMessageModel `json:"validationMessages,omitempty"`
	// The list of actions for this reservation
	Actions *[]ActionModelReservationActionNotAllowedReservationActionReason `json:"actions,omitempty"`
	Company *EmbeddedCompanyModel `json:"company,omitempty"`
	// Corporate code provided during creation. Used to find offers during amend.
	CorporateCode *string `json:"corporateCode,omitempty"`
	// Whether all folios of a reservation have an invoice
	AllFoliosHaveInvoice *bool `json:"allFoliosHaveInvoice,omitempty"`
	// Tax breakdown, displaying net and tax amount for each VAT type
	TaxDetails []TaxDetailModel `json:"taxDetails"`
	// Whether the city tax has already been added to the reservation. Set to false, if the property does not have city tax configured
	HasCityTax bool `json:"hasCityTax"`
	Commission *CommissionModel `json:"commission,omitempty"`
	// The promo code associated with a certain special offer used to create the reservation
	PromoCode *string `json:"promoCode,omitempty"`
	PayableAmount PayableAmountModel `json:"payableAmount"`
}

// NewReservationModel instantiates a new ReservationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationModel(id string, bookingId string, status string, property EmbeddedPropertyModel, ratePlan EmbeddedRatePlanModel, unitGroup EmbeddedUnitGroupModel, totalGrossAmount MonetaryValueModel, arrival time.Time, departure time.Time, created time.Time, modified time.Time, adults int32, channelCode string, guaranteeType string, cancellationFee ReservationCancellationFeeModel, noShowFee ReservationNoShowFeeModel, balance MonetaryValueModel, taxDetails []TaxDetailModel, hasCityTax bool, payableAmount PayableAmountModel) *ReservationModel {
	this := ReservationModel{}
	this.Id = id
	this.BookingId = bookingId
	this.Status = status
	this.Property = property
	this.RatePlan = ratePlan
	this.UnitGroup = unitGroup
	this.TotalGrossAmount = totalGrossAmount
	this.Arrival = arrival
	this.Departure = departure
	this.Created = created
	this.Modified = modified
	this.Adults = adults
	this.ChannelCode = channelCode
	this.GuaranteeType = guaranteeType
	this.CancellationFee = cancellationFee
	this.NoShowFee = noShowFee
	this.Balance = balance
	this.TaxDetails = taxDetails
	this.HasCityTax = hasCityTax
	this.PayableAmount = payableAmount
	return &this
}

// NewReservationModelWithDefaults instantiates a new ReservationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationModelWithDefaults() *ReservationModel {
	this := ReservationModel{}
	return &this
}

// GetId returns the Id field value
func (o *ReservationModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ReservationModel) SetId(v string) {
	o.Id = v
}

// GetBookingId returns the BookingId field value
func (o *ReservationModel) GetBookingId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BookingId
}

// GetBookingIdOk returns a tuple with the BookingId field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetBookingIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BookingId, true
}

// SetBookingId sets field value
func (o *ReservationModel) SetBookingId(v string) {
	o.BookingId = v
}

// GetBlockId returns the BlockId field value if set, zero value otherwise.
func (o *ReservationModel) GetBlockId() string {
	if o == nil || o.BlockId == nil {
		var ret string
		return ret
	}
	return *o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetBlockIdOk() (*string, bool) {
	if o == nil || o.BlockId == nil {
		return nil, false
	}
	return o.BlockId, true
}

// HasBlockId returns a boolean if a field has been set.
func (o *ReservationModel) HasBlockId() bool {
	if o != nil && o.BlockId != nil {
		return true
	}

	return false
}

// SetBlockId gets a reference to the given string and assigns it to the BlockId field.
func (o *ReservationModel) SetBlockId(v string) {
	o.BlockId = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *ReservationModel) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *ReservationModel) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *ReservationModel) SetGroupName(v string) {
	o.GroupName = &v
}

// GetStatus returns the Status field value
func (o *ReservationModel) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ReservationModel) SetStatus(v string) {
	o.Status = v
}

// GetCheckInTime returns the CheckInTime field value if set, zero value otherwise.
func (o *ReservationModel) GetCheckInTime() time.Time {
	if o == nil || o.CheckInTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CheckInTime
}

// GetCheckInTimeOk returns a tuple with the CheckInTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetCheckInTimeOk() (*time.Time, bool) {
	if o == nil || o.CheckInTime == nil {
		return nil, false
	}
	return o.CheckInTime, true
}

// HasCheckInTime returns a boolean if a field has been set.
func (o *ReservationModel) HasCheckInTime() bool {
	if o != nil && o.CheckInTime != nil {
		return true
	}

	return false
}

// SetCheckInTime gets a reference to the given time.Time and assigns it to the CheckInTime field.
func (o *ReservationModel) SetCheckInTime(v time.Time) {
	o.CheckInTime = &v
}

// GetCheckOutTime returns the CheckOutTime field value if set, zero value otherwise.
func (o *ReservationModel) GetCheckOutTime() time.Time {
	if o == nil || o.CheckOutTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CheckOutTime
}

// GetCheckOutTimeOk returns a tuple with the CheckOutTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetCheckOutTimeOk() (*time.Time, bool) {
	if o == nil || o.CheckOutTime == nil {
		return nil, false
	}
	return o.CheckOutTime, true
}

// HasCheckOutTime returns a boolean if a field has been set.
func (o *ReservationModel) HasCheckOutTime() bool {
	if o != nil && o.CheckOutTime != nil {
		return true
	}

	return false
}

// SetCheckOutTime gets a reference to the given time.Time and assigns it to the CheckOutTime field.
func (o *ReservationModel) SetCheckOutTime(v time.Time) {
	o.CheckOutTime = &v
}

// GetCancellationTime returns the CancellationTime field value if set, zero value otherwise.
func (o *ReservationModel) GetCancellationTime() time.Time {
	if o == nil || o.CancellationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CancellationTime
}

// GetCancellationTimeOk returns a tuple with the CancellationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetCancellationTimeOk() (*time.Time, bool) {
	if o == nil || o.CancellationTime == nil {
		return nil, false
	}
	return o.CancellationTime, true
}

// HasCancellationTime returns a boolean if a field has been set.
func (o *ReservationModel) HasCancellationTime() bool {
	if o != nil && o.CancellationTime != nil {
		return true
	}

	return false
}

// SetCancellationTime gets a reference to the given time.Time and assigns it to the CancellationTime field.
func (o *ReservationModel) SetCancellationTime(v time.Time) {
	o.CancellationTime = &v
}

// GetNoShowTime returns the NoShowTime field value if set, zero value otherwise.
func (o *ReservationModel) GetNoShowTime() time.Time {
	if o == nil || o.NoShowTime == nil {
		var ret time.Time
		return ret
	}
	return *o.NoShowTime
}

// GetNoShowTimeOk returns a tuple with the NoShowTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetNoShowTimeOk() (*time.Time, bool) {
	if o == nil || o.NoShowTime == nil {
		return nil, false
	}
	return o.NoShowTime, true
}

// HasNoShowTime returns a boolean if a field has been set.
func (o *ReservationModel) HasNoShowTime() bool {
	if o != nil && o.NoShowTime != nil {
		return true
	}

	return false
}

// SetNoShowTime gets a reference to the given time.Time and assigns it to the NoShowTime field.
func (o *ReservationModel) SetNoShowTime(v time.Time) {
	o.NoShowTime = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *ReservationModel) GetUnit() EmbeddedUnitModel {
	if o == nil || o.Unit == nil {
		var ret EmbeddedUnitModel
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetUnitOk() (*EmbeddedUnitModel, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *ReservationModel) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given EmbeddedUnitModel and assigns it to the Unit field.
func (o *ReservationModel) SetUnit(v EmbeddedUnitModel) {
	o.Unit = &v
}

// GetProperty returns the Property field value
func (o *ReservationModel) GetProperty() EmbeddedPropertyModel {
	if o == nil {
		var ret EmbeddedPropertyModel
		return ret
	}

	return o.Property
}

// GetPropertyOk returns a tuple with the Property field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetPropertyOk() (*EmbeddedPropertyModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Property, true
}

// SetProperty sets field value
func (o *ReservationModel) SetProperty(v EmbeddedPropertyModel) {
	o.Property = v
}

// GetRatePlan returns the RatePlan field value
func (o *ReservationModel) GetRatePlan() EmbeddedRatePlanModel {
	if o == nil {
		var ret EmbeddedRatePlanModel
		return ret
	}

	return o.RatePlan
}

// GetRatePlanOk returns a tuple with the RatePlan field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetRatePlanOk() (*EmbeddedRatePlanModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RatePlan, true
}

// SetRatePlan sets field value
func (o *ReservationModel) SetRatePlan(v EmbeddedRatePlanModel) {
	o.RatePlan = v
}

// GetUnitGroup returns the UnitGroup field value
func (o *ReservationModel) GetUnitGroup() EmbeddedUnitGroupModel {
	if o == nil {
		var ret EmbeddedUnitGroupModel
		return ret
	}

	return o.UnitGroup
}

// GetUnitGroupOk returns a tuple with the UnitGroup field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetUnitGroupOk() (*EmbeddedUnitGroupModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UnitGroup, true
}

// SetUnitGroup sets field value
func (o *ReservationModel) SetUnitGroup(v EmbeddedUnitGroupModel) {
	o.UnitGroup = v
}

// GetTotalGrossAmount returns the TotalGrossAmount field value
func (o *ReservationModel) GetTotalGrossAmount() MonetaryValueModel {
	if o == nil {
		var ret MonetaryValueModel
		return ret
	}

	return o.TotalGrossAmount
}

// GetTotalGrossAmountOk returns a tuple with the TotalGrossAmount field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetTotalGrossAmountOk() (*MonetaryValueModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalGrossAmount, true
}

// SetTotalGrossAmount sets field value
func (o *ReservationModel) SetTotalGrossAmount(v MonetaryValueModel) {
	o.TotalGrossAmount = v
}

// GetArrival returns the Arrival field value
func (o *ReservationModel) GetArrival() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Arrival
}

// GetArrivalOk returns a tuple with the Arrival field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetArrivalOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Arrival, true
}

// SetArrival sets field value
func (o *ReservationModel) SetArrival(v time.Time) {
	o.Arrival = v
}

// GetDeparture returns the Departure field value
func (o *ReservationModel) GetDeparture() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Departure
}

// GetDepartureOk returns a tuple with the Departure field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetDepartureOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Departure, true
}

// SetDeparture sets field value
func (o *ReservationModel) SetDeparture(v time.Time) {
	o.Departure = v
}

// GetCreated returns the Created field value
func (o *ReservationModel) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetCreatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ReservationModel) SetCreated(v time.Time) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *ReservationModel) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetModifiedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *ReservationModel) SetModified(v time.Time) {
	o.Modified = v
}

// GetAdults returns the Adults field value
func (o *ReservationModel) GetAdults() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Adults
}

// GetAdultsOk returns a tuple with the Adults field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetAdultsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Adults, true
}

// SetAdults sets field value
func (o *ReservationModel) SetAdults(v int32) {
	o.Adults = v
}

// GetChildrenAges returns the ChildrenAges field value if set, zero value otherwise.
func (o *ReservationModel) GetChildrenAges() []int32 {
	if o == nil || o.ChildrenAges == nil {
		var ret []int32
		return ret
	}
	return *o.ChildrenAges
}

// GetChildrenAgesOk returns a tuple with the ChildrenAges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetChildrenAgesOk() (*[]int32, bool) {
	if o == nil || o.ChildrenAges == nil {
		return nil, false
	}
	return o.ChildrenAges, true
}

// HasChildrenAges returns a boolean if a field has been set.
func (o *ReservationModel) HasChildrenAges() bool {
	if o != nil && o.ChildrenAges != nil {
		return true
	}

	return false
}

// SetChildrenAges gets a reference to the given []int32 and assigns it to the ChildrenAges field.
func (o *ReservationModel) SetChildrenAges(v []int32) {
	o.ChildrenAges = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ReservationModel) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ReservationModel) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ReservationModel) SetComment(v string) {
	o.Comment = &v
}

// GetGuestComment returns the GuestComment field value if set, zero value otherwise.
func (o *ReservationModel) GetGuestComment() string {
	if o == nil || o.GuestComment == nil {
		var ret string
		return ret
	}
	return *o.GuestComment
}

// GetGuestCommentOk returns a tuple with the GuestComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetGuestCommentOk() (*string, bool) {
	if o == nil || o.GuestComment == nil {
		return nil, false
	}
	return o.GuestComment, true
}

// HasGuestComment returns a boolean if a field has been set.
func (o *ReservationModel) HasGuestComment() bool {
	if o != nil && o.GuestComment != nil {
		return true
	}

	return false
}

// SetGuestComment gets a reference to the given string and assigns it to the GuestComment field.
func (o *ReservationModel) SetGuestComment(v string) {
	o.GuestComment = &v
}

// GetExternalCode returns the ExternalCode field value if set, zero value otherwise.
func (o *ReservationModel) GetExternalCode() string {
	if o == nil || o.ExternalCode == nil {
		var ret string
		return ret
	}
	return *o.ExternalCode
}

// GetExternalCodeOk returns a tuple with the ExternalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetExternalCodeOk() (*string, bool) {
	if o == nil || o.ExternalCode == nil {
		return nil, false
	}
	return o.ExternalCode, true
}

// HasExternalCode returns a boolean if a field has been set.
func (o *ReservationModel) HasExternalCode() bool {
	if o != nil && o.ExternalCode != nil {
		return true
	}

	return false
}

// SetExternalCode gets a reference to the given string and assigns it to the ExternalCode field.
func (o *ReservationModel) SetExternalCode(v string) {
	o.ExternalCode = &v
}

// GetChannelCode returns the ChannelCode field value
func (o *ReservationModel) GetChannelCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelCode
}

// GetChannelCodeOk returns a tuple with the ChannelCode field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetChannelCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ChannelCode, true
}

// SetChannelCode sets field value
func (o *ReservationModel) SetChannelCode(v string) {
	o.ChannelCode = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ReservationModel) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ReservationModel) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *ReservationModel) SetSource(v string) {
	o.Source = &v
}

// GetPrimaryGuest returns the PrimaryGuest field value if set, zero value otherwise.
func (o *ReservationModel) GetPrimaryGuest() GuestModel {
	if o == nil || o.PrimaryGuest == nil {
		var ret GuestModel
		return ret
	}
	return *o.PrimaryGuest
}

// GetPrimaryGuestOk returns a tuple with the PrimaryGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetPrimaryGuestOk() (*GuestModel, bool) {
	if o == nil || o.PrimaryGuest == nil {
		return nil, false
	}
	return o.PrimaryGuest, true
}

// HasPrimaryGuest returns a boolean if a field has been set.
func (o *ReservationModel) HasPrimaryGuest() bool {
	if o != nil && o.PrimaryGuest != nil {
		return true
	}

	return false
}

// SetPrimaryGuest gets a reference to the given GuestModel and assigns it to the PrimaryGuest field.
func (o *ReservationModel) SetPrimaryGuest(v GuestModel) {
	o.PrimaryGuest = &v
}

// GetAdditionalGuests returns the AdditionalGuests field value if set, zero value otherwise.
func (o *ReservationModel) GetAdditionalGuests() []GuestModel {
	if o == nil || o.AdditionalGuests == nil {
		var ret []GuestModel
		return ret
	}
	return *o.AdditionalGuests
}

// GetAdditionalGuestsOk returns a tuple with the AdditionalGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetAdditionalGuestsOk() (*[]GuestModel, bool) {
	if o == nil || o.AdditionalGuests == nil {
		return nil, false
	}
	return o.AdditionalGuests, true
}

// HasAdditionalGuests returns a boolean if a field has been set.
func (o *ReservationModel) HasAdditionalGuests() bool {
	if o != nil && o.AdditionalGuests != nil {
		return true
	}

	return false
}

// SetAdditionalGuests gets a reference to the given []GuestModel and assigns it to the AdditionalGuests field.
func (o *ReservationModel) SetAdditionalGuests(v []GuestModel) {
	o.AdditionalGuests = &v
}

// GetBooker returns the Booker field value if set, zero value otherwise.
func (o *ReservationModel) GetBooker() BookerModel {
	if o == nil || o.Booker == nil {
		var ret BookerModel
		return ret
	}
	return *o.Booker
}

// GetBookerOk returns a tuple with the Booker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetBookerOk() (*BookerModel, bool) {
	if o == nil || o.Booker == nil {
		return nil, false
	}
	return o.Booker, true
}

// HasBooker returns a boolean if a field has been set.
func (o *ReservationModel) HasBooker() bool {
	if o != nil && o.Booker != nil {
		return true
	}

	return false
}

// SetBooker gets a reference to the given BookerModel and assigns it to the Booker field.
func (o *ReservationModel) SetBooker(v BookerModel) {
	o.Booker = &v
}

// GetPaymentAccount returns the PaymentAccount field value if set, zero value otherwise.
func (o *ReservationModel) GetPaymentAccount() PaymentAccountModel {
	if o == nil || o.PaymentAccount == nil {
		var ret PaymentAccountModel
		return ret
	}
	return *o.PaymentAccount
}

// GetPaymentAccountOk returns a tuple with the PaymentAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetPaymentAccountOk() (*PaymentAccountModel, bool) {
	if o == nil || o.PaymentAccount == nil {
		return nil, false
	}
	return o.PaymentAccount, true
}

// HasPaymentAccount returns a boolean if a field has been set.
func (o *ReservationModel) HasPaymentAccount() bool {
	if o != nil && o.PaymentAccount != nil {
		return true
	}

	return false
}

// SetPaymentAccount gets a reference to the given PaymentAccountModel and assigns it to the PaymentAccount field.
func (o *ReservationModel) SetPaymentAccount(v PaymentAccountModel) {
	o.PaymentAccount = &v
}

// GetTimeSlices returns the TimeSlices field value if set, zero value otherwise.
func (o *ReservationModel) GetTimeSlices() []TimeSliceModel {
	if o == nil || o.TimeSlices == nil {
		var ret []TimeSliceModel
		return ret
	}
	return *o.TimeSlices
}

// GetTimeSlicesOk returns a tuple with the TimeSlices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetTimeSlicesOk() (*[]TimeSliceModel, bool) {
	if o == nil || o.TimeSlices == nil {
		return nil, false
	}
	return o.TimeSlices, true
}

// HasTimeSlices returns a boolean if a field has been set.
func (o *ReservationModel) HasTimeSlices() bool {
	if o != nil && o.TimeSlices != nil {
		return true
	}

	return false
}

// SetTimeSlices gets a reference to the given []TimeSliceModel and assigns it to the TimeSlices field.
func (o *ReservationModel) SetTimeSlices(v []TimeSliceModel) {
	o.TimeSlices = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *ReservationModel) GetServices() []ReservationServiceItemModel {
	if o == nil || o.Services == nil {
		var ret []ReservationServiceItemModel
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetServicesOk() (*[]ReservationServiceItemModel, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *ReservationModel) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []ReservationServiceItemModel and assigns it to the Services field.
func (o *ReservationModel) SetServices(v []ReservationServiceItemModel) {
	o.Services = &v
}

// GetGuaranteeType returns the GuaranteeType field value
func (o *ReservationModel) GetGuaranteeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GuaranteeType
}

// GetGuaranteeTypeOk returns a tuple with the GuaranteeType field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetGuaranteeTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GuaranteeType, true
}

// SetGuaranteeType sets field value
func (o *ReservationModel) SetGuaranteeType(v string) {
	o.GuaranteeType = v
}

// GetCancellationFee returns the CancellationFee field value
func (o *ReservationModel) GetCancellationFee() ReservationCancellationFeeModel {
	if o == nil {
		var ret ReservationCancellationFeeModel
		return ret
	}

	return o.CancellationFee
}

// GetCancellationFeeOk returns a tuple with the CancellationFee field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetCancellationFeeOk() (*ReservationCancellationFeeModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CancellationFee, true
}

// SetCancellationFee sets field value
func (o *ReservationModel) SetCancellationFee(v ReservationCancellationFeeModel) {
	o.CancellationFee = v
}

// GetNoShowFee returns the NoShowFee field value
func (o *ReservationModel) GetNoShowFee() ReservationNoShowFeeModel {
	if o == nil {
		var ret ReservationNoShowFeeModel
		return ret
	}

	return o.NoShowFee
}

// GetNoShowFeeOk returns a tuple with the NoShowFee field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetNoShowFeeOk() (*ReservationNoShowFeeModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NoShowFee, true
}

// SetNoShowFee sets field value
func (o *ReservationModel) SetNoShowFee(v ReservationNoShowFeeModel) {
	o.NoShowFee = v
}

// GetTravelPurpose returns the TravelPurpose field value if set, zero value otherwise.
func (o *ReservationModel) GetTravelPurpose() string {
	if o == nil || o.TravelPurpose == nil {
		var ret string
		return ret
	}
	return *o.TravelPurpose
}

// GetTravelPurposeOk returns a tuple with the TravelPurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetTravelPurposeOk() (*string, bool) {
	if o == nil || o.TravelPurpose == nil {
		return nil, false
	}
	return o.TravelPurpose, true
}

// HasTravelPurpose returns a boolean if a field has been set.
func (o *ReservationModel) HasTravelPurpose() bool {
	if o != nil && o.TravelPurpose != nil {
		return true
	}

	return false
}

// SetTravelPurpose gets a reference to the given string and assigns it to the TravelPurpose field.
func (o *ReservationModel) SetTravelPurpose(v string) {
	o.TravelPurpose = &v
}

// GetBalance returns the Balance field value
func (o *ReservationModel) GetBalance() MonetaryValueModel {
	if o == nil {
		var ret MonetaryValueModel
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetBalanceOk() (*MonetaryValueModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *ReservationModel) SetBalance(v MonetaryValueModel) {
	o.Balance = v
}

// GetAssignedUnits returns the AssignedUnits field value if set, zero value otherwise.
func (o *ReservationModel) GetAssignedUnits() []ReservationAssignedUnitModel {
	if o == nil || o.AssignedUnits == nil {
		var ret []ReservationAssignedUnitModel
		return ret
	}
	return *o.AssignedUnits
}

// GetAssignedUnitsOk returns a tuple with the AssignedUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetAssignedUnitsOk() (*[]ReservationAssignedUnitModel, bool) {
	if o == nil || o.AssignedUnits == nil {
		return nil, false
	}
	return o.AssignedUnits, true
}

// HasAssignedUnits returns a boolean if a field has been set.
func (o *ReservationModel) HasAssignedUnits() bool {
	if o != nil && o.AssignedUnits != nil {
		return true
	}

	return false
}

// SetAssignedUnits gets a reference to the given []ReservationAssignedUnitModel and assigns it to the AssignedUnits field.
func (o *ReservationModel) SetAssignedUnits(v []ReservationAssignedUnitModel) {
	o.AssignedUnits = &v
}

// GetValidationMessages returns the ValidationMessages field value if set, zero value otherwise.
func (o *ReservationModel) GetValidationMessages() []ReservationValidationMessageModel {
	if o == nil || o.ValidationMessages == nil {
		var ret []ReservationValidationMessageModel
		return ret
	}
	return *o.ValidationMessages
}

// GetValidationMessagesOk returns a tuple with the ValidationMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetValidationMessagesOk() (*[]ReservationValidationMessageModel, bool) {
	if o == nil || o.ValidationMessages == nil {
		return nil, false
	}
	return o.ValidationMessages, true
}

// HasValidationMessages returns a boolean if a field has been set.
func (o *ReservationModel) HasValidationMessages() bool {
	if o != nil && o.ValidationMessages != nil {
		return true
	}

	return false
}

// SetValidationMessages gets a reference to the given []ReservationValidationMessageModel and assigns it to the ValidationMessages field.
func (o *ReservationModel) SetValidationMessages(v []ReservationValidationMessageModel) {
	o.ValidationMessages = &v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *ReservationModel) GetActions() []ActionModelReservationActionNotAllowedReservationActionReason {
	if o == nil || o.Actions == nil {
		var ret []ActionModelReservationActionNotAllowedReservationActionReason
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetActionsOk() (*[]ActionModelReservationActionNotAllowedReservationActionReason, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *ReservationModel) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []ActionModelReservationActionNotAllowedReservationActionReason and assigns it to the Actions field.
func (o *ReservationModel) SetActions(v []ActionModelReservationActionNotAllowedReservationActionReason) {
	o.Actions = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *ReservationModel) GetCompany() EmbeddedCompanyModel {
	if o == nil || o.Company == nil {
		var ret EmbeddedCompanyModel
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetCompanyOk() (*EmbeddedCompanyModel, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *ReservationModel) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given EmbeddedCompanyModel and assigns it to the Company field.
func (o *ReservationModel) SetCompany(v EmbeddedCompanyModel) {
	o.Company = &v
}

// GetCorporateCode returns the CorporateCode field value if set, zero value otherwise.
func (o *ReservationModel) GetCorporateCode() string {
	if o == nil || o.CorporateCode == nil {
		var ret string
		return ret
	}
	return *o.CorporateCode
}

// GetCorporateCodeOk returns a tuple with the CorporateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetCorporateCodeOk() (*string, bool) {
	if o == nil || o.CorporateCode == nil {
		return nil, false
	}
	return o.CorporateCode, true
}

// HasCorporateCode returns a boolean if a field has been set.
func (o *ReservationModel) HasCorporateCode() bool {
	if o != nil && o.CorporateCode != nil {
		return true
	}

	return false
}

// SetCorporateCode gets a reference to the given string and assigns it to the CorporateCode field.
func (o *ReservationModel) SetCorporateCode(v string) {
	o.CorporateCode = &v
}

// GetAllFoliosHaveInvoice returns the AllFoliosHaveInvoice field value if set, zero value otherwise.
func (o *ReservationModel) GetAllFoliosHaveInvoice() bool {
	if o == nil || o.AllFoliosHaveInvoice == nil {
		var ret bool
		return ret
	}
	return *o.AllFoliosHaveInvoice
}

// GetAllFoliosHaveInvoiceOk returns a tuple with the AllFoliosHaveInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetAllFoliosHaveInvoiceOk() (*bool, bool) {
	if o == nil || o.AllFoliosHaveInvoice == nil {
		return nil, false
	}
	return o.AllFoliosHaveInvoice, true
}

// HasAllFoliosHaveInvoice returns a boolean if a field has been set.
func (o *ReservationModel) HasAllFoliosHaveInvoice() bool {
	if o != nil && o.AllFoliosHaveInvoice != nil {
		return true
	}

	return false
}

// SetAllFoliosHaveInvoice gets a reference to the given bool and assigns it to the AllFoliosHaveInvoice field.
func (o *ReservationModel) SetAllFoliosHaveInvoice(v bool) {
	o.AllFoliosHaveInvoice = &v
}

// GetTaxDetails returns the TaxDetails field value
func (o *ReservationModel) GetTaxDetails() []TaxDetailModel {
	if o == nil {
		var ret []TaxDetailModel
		return ret
	}

	return o.TaxDetails
}

// GetTaxDetailsOk returns a tuple with the TaxDetails field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetTaxDetailsOk() (*[]TaxDetailModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TaxDetails, true
}

// SetTaxDetails sets field value
func (o *ReservationModel) SetTaxDetails(v []TaxDetailModel) {
	o.TaxDetails = v
}

// GetHasCityTax returns the HasCityTax field value
func (o *ReservationModel) GetHasCityTax() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasCityTax
}

// GetHasCityTaxOk returns a tuple with the HasCityTax field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetHasCityTaxOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HasCityTax, true
}

// SetHasCityTax sets field value
func (o *ReservationModel) SetHasCityTax(v bool) {
	o.HasCityTax = v
}

// GetCommission returns the Commission field value if set, zero value otherwise.
func (o *ReservationModel) GetCommission() CommissionModel {
	if o == nil || o.Commission == nil {
		var ret CommissionModel
		return ret
	}
	return *o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetCommissionOk() (*CommissionModel, bool) {
	if o == nil || o.Commission == nil {
		return nil, false
	}
	return o.Commission, true
}

// HasCommission returns a boolean if a field has been set.
func (o *ReservationModel) HasCommission() bool {
	if o != nil && o.Commission != nil {
		return true
	}

	return false
}

// SetCommission gets a reference to the given CommissionModel and assigns it to the Commission field.
func (o *ReservationModel) SetCommission(v CommissionModel) {
	o.Commission = &v
}

// GetPromoCode returns the PromoCode field value if set, zero value otherwise.
func (o *ReservationModel) GetPromoCode() string {
	if o == nil || o.PromoCode == nil {
		var ret string
		return ret
	}
	return *o.PromoCode
}

// GetPromoCodeOk returns a tuple with the PromoCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetPromoCodeOk() (*string, bool) {
	if o == nil || o.PromoCode == nil {
		return nil, false
	}
	return o.PromoCode, true
}

// HasPromoCode returns a boolean if a field has been set.
func (o *ReservationModel) HasPromoCode() bool {
	if o != nil && o.PromoCode != nil {
		return true
	}

	return false
}

// SetPromoCode gets a reference to the given string and assigns it to the PromoCode field.
func (o *ReservationModel) SetPromoCode(v string) {
	o.PromoCode = &v
}

// GetPayableAmount returns the PayableAmount field value
func (o *ReservationModel) GetPayableAmount() PayableAmountModel {
	if o == nil {
		var ret PayableAmountModel
		return ret
	}

	return o.PayableAmount
}

// GetPayableAmountOk returns a tuple with the PayableAmount field value
// and a boolean to check if the value has been set.
func (o *ReservationModel) GetPayableAmountOk() (*PayableAmountModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PayableAmount, true
}

// SetPayableAmount sets field value
func (o *ReservationModel) SetPayableAmount(v PayableAmountModel) {
	o.PayableAmount = v
}

func (o ReservationModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["bookingId"] = o.BookingId
	}
	if o.BlockId != nil {
		toSerialize["blockId"] = o.BlockId
	}
	if o.GroupName != nil {
		toSerialize["groupName"] = o.GroupName
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.CheckInTime != nil {
		toSerialize["checkInTime"] = o.CheckInTime
	}
	if o.CheckOutTime != nil {
		toSerialize["checkOutTime"] = o.CheckOutTime
	}
	if o.CancellationTime != nil {
		toSerialize["cancellationTime"] = o.CancellationTime
	}
	if o.NoShowTime != nil {
		toSerialize["noShowTime"] = o.NoShowTime
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if true {
		toSerialize["property"] = o.Property
	}
	if true {
		toSerialize["ratePlan"] = o.RatePlan
	}
	if true {
		toSerialize["unitGroup"] = o.UnitGroup
	}
	if true {
		toSerialize["totalGrossAmount"] = o.TotalGrossAmount
	}
	if true {
		toSerialize["arrival"] = o.Arrival
	}
	if true {
		toSerialize["departure"] = o.Departure
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	if true {
		toSerialize["adults"] = o.Adults
	}
	if o.ChildrenAges != nil {
		toSerialize["childrenAges"] = o.ChildrenAges
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.GuestComment != nil {
		toSerialize["guestComment"] = o.GuestComment
	}
	if o.ExternalCode != nil {
		toSerialize["externalCode"] = o.ExternalCode
	}
	if true {
		toSerialize["channelCode"] = o.ChannelCode
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.PrimaryGuest != nil {
		toSerialize["primaryGuest"] = o.PrimaryGuest
	}
	if o.AdditionalGuests != nil {
		toSerialize["additionalGuests"] = o.AdditionalGuests
	}
	if o.Booker != nil {
		toSerialize["booker"] = o.Booker
	}
	if o.PaymentAccount != nil {
		toSerialize["paymentAccount"] = o.PaymentAccount
	}
	if o.TimeSlices != nil {
		toSerialize["timeSlices"] = o.TimeSlices
	}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	if true {
		toSerialize["guaranteeType"] = o.GuaranteeType
	}
	if true {
		toSerialize["cancellationFee"] = o.CancellationFee
	}
	if true {
		toSerialize["noShowFee"] = o.NoShowFee
	}
	if o.TravelPurpose != nil {
		toSerialize["travelPurpose"] = o.TravelPurpose
	}
	if true {
		toSerialize["balance"] = o.Balance
	}
	if o.AssignedUnits != nil {
		toSerialize["assignedUnits"] = o.AssignedUnits
	}
	if o.ValidationMessages != nil {
		toSerialize["validationMessages"] = o.ValidationMessages
	}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.CorporateCode != nil {
		toSerialize["corporateCode"] = o.CorporateCode
	}
	if o.AllFoliosHaveInvoice != nil {
		toSerialize["allFoliosHaveInvoice"] = o.AllFoliosHaveInvoice
	}
	if true {
		toSerialize["taxDetails"] = o.TaxDetails
	}
	if true {
		toSerialize["hasCityTax"] = o.HasCityTax
	}
	if o.Commission != nil {
		toSerialize["commission"] = o.Commission
	}
	if o.PromoCode != nil {
		toSerialize["promoCode"] = o.PromoCode
	}
	if true {
		toSerialize["payableAmount"] = o.PayableAmount
	}
	return json.Marshal(toSerialize)
}

type NullableReservationModel struct {
	value *ReservationModel
	isSet bool
}

func (v NullableReservationModel) Get() *ReservationModel {
	return v.value
}

func (v *NullableReservationModel) Set(val *ReservationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationModel(val *ReservationModel) *NullableReservationModel {
	return &NullableReservationModel{value: val, isSet: true}
}

func (v NullableReservationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


