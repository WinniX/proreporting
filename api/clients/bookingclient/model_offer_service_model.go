/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// OfferServiceModel struct for OfferServiceModel
type OfferServiceModel struct {
	Service EmbeddedServiceModel `json:"service"`
	// The date this service is delivered
	ServiceDate string `json:"serviceDate"`
	// The default count of offered services. For services whose pricing unit is 'Person' it will be based on the adults and children specified, otherwise 1.
	Count int32 `json:"count"`
	Amount AmountModel `json:"amount"`
	// Whether the service price is included in or added to the base rate
	PricingMode string `json:"pricingMode"`
}

// NewOfferServiceModel instantiates a new OfferServiceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfferServiceModel(service EmbeddedServiceModel, serviceDate string, count int32, amount AmountModel, pricingMode string) *OfferServiceModel {
	this := OfferServiceModel{}
	this.Service = service
	this.ServiceDate = serviceDate
	this.Count = count
	this.Amount = amount
	this.PricingMode = pricingMode
	return &this
}

// NewOfferServiceModelWithDefaults instantiates a new OfferServiceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfferServiceModelWithDefaults() *OfferServiceModel {
	this := OfferServiceModel{}
	return &this
}

// GetService returns the Service field value
func (o *OfferServiceModel) GetService() EmbeddedServiceModel {
	if o == nil {
		var ret EmbeddedServiceModel
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *OfferServiceModel) GetServiceOk() (*EmbeddedServiceModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *OfferServiceModel) SetService(v EmbeddedServiceModel) {
	o.Service = v
}

// GetServiceDate returns the ServiceDate field value
func (o *OfferServiceModel) GetServiceDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceDate
}

// GetServiceDateOk returns a tuple with the ServiceDate field value
// and a boolean to check if the value has been set.
func (o *OfferServiceModel) GetServiceDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ServiceDate, true
}

// SetServiceDate sets field value
func (o *OfferServiceModel) SetServiceDate(v string) {
	o.ServiceDate = v
}

// GetCount returns the Count field value
func (o *OfferServiceModel) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *OfferServiceModel) GetCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *OfferServiceModel) SetCount(v int32) {
	o.Count = v
}

// GetAmount returns the Amount field value
func (o *OfferServiceModel) GetAmount() AmountModel {
	if o == nil {
		var ret AmountModel
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *OfferServiceModel) GetAmountOk() (*AmountModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *OfferServiceModel) SetAmount(v AmountModel) {
	o.Amount = v
}

// GetPricingMode returns the PricingMode field value
func (o *OfferServiceModel) GetPricingMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PricingMode
}

// GetPricingModeOk returns a tuple with the PricingMode field value
// and a boolean to check if the value has been set.
func (o *OfferServiceModel) GetPricingModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PricingMode, true
}

// SetPricingMode sets field value
func (o *OfferServiceModel) SetPricingMode(v string) {
	o.PricingMode = v
}

func (o OfferServiceModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["service"] = o.Service
	}
	if true {
		toSerialize["serviceDate"] = o.ServiceDate
	}
	if true {
		toSerialize["count"] = o.Count
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["pricingMode"] = o.PricingMode
	}
	return json.Marshal(toSerialize)
}

type NullableOfferServiceModel struct {
	value *OfferServiceModel
	isSet bool
}

func (v NullableOfferServiceModel) Get() *OfferServiceModel {
	return v.value
}

func (v *NullableOfferServiceModel) Set(val *OfferServiceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOfferServiceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOfferServiceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfferServiceModel(val *OfferServiceModel) *NullableOfferServiceModel {
	return &NullableOfferServiceModel{value: val, isSet: true}
}

func (v NullableOfferServiceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfferServiceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


