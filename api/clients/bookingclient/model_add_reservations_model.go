/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// AddReservationsModel With this request you can add reservations to an existing booking
type AddReservationsModel struct {
	// List of reservations to add to the existing booking
	Reservations []CreateReservationModel `json:"reservations"`
	// The reference of a payment transaction. This should be set when a payment transaction has been initiated and should be used to complete the transaction upon reservation creation.
	TransactionReference *string `json:"transactionReference,omitempty"`
}

// NewAddReservationsModel instantiates a new AddReservationsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddReservationsModel(reservations []CreateReservationModel) *AddReservationsModel {
	this := AddReservationsModel{}
	this.Reservations = reservations
	return &this
}

// NewAddReservationsModelWithDefaults instantiates a new AddReservationsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddReservationsModelWithDefaults() *AddReservationsModel {
	this := AddReservationsModel{}
	return &this
}

// GetReservations returns the Reservations field value
func (o *AddReservationsModel) GetReservations() []CreateReservationModel {
	if o == nil {
		var ret []CreateReservationModel
		return ret
	}

	return o.Reservations
}

// GetReservationsOk returns a tuple with the Reservations field value
// and a boolean to check if the value has been set.
func (o *AddReservationsModel) GetReservationsOk() (*[]CreateReservationModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reservations, true
}

// SetReservations sets field value
func (o *AddReservationsModel) SetReservations(v []CreateReservationModel) {
	o.Reservations = v
}

// GetTransactionReference returns the TransactionReference field value if set, zero value otherwise.
func (o *AddReservationsModel) GetTransactionReference() string {
	if o == nil || o.TransactionReference == nil {
		var ret string
		return ret
	}
	return *o.TransactionReference
}

// GetTransactionReferenceOk returns a tuple with the TransactionReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddReservationsModel) GetTransactionReferenceOk() (*string, bool) {
	if o == nil || o.TransactionReference == nil {
		return nil, false
	}
	return o.TransactionReference, true
}

// HasTransactionReference returns a boolean if a field has been set.
func (o *AddReservationsModel) HasTransactionReference() bool {
	if o != nil && o.TransactionReference != nil {
		return true
	}

	return false
}

// SetTransactionReference gets a reference to the given string and assigns it to the TransactionReference field.
func (o *AddReservationsModel) SetTransactionReference(v string) {
	o.TransactionReference = &v
}

func (o AddReservationsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["reservations"] = o.Reservations
	}
	if o.TransactionReference != nil {
		toSerialize["transactionReference"] = o.TransactionReference
	}
	return json.Marshal(toSerialize)
}

type NullableAddReservationsModel struct {
	value *AddReservationsModel
	isSet bool
}

func (v NullableAddReservationsModel) Get() *AddReservationsModel {
	return v.value
}

func (v *NullableAddReservationsModel) Set(val *AddReservationsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddReservationsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddReservationsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddReservationsModel(val *AddReservationsModel) *NullableAddReservationsModel {
	return &NullableAddReservationsModel{value: val, isSet: true}
}

func (v NullableAddReservationsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddReservationsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


