/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// PickUpReservationModel With this request you can pick up a reservation
type PickUpReservationModel struct {
	// ID of the block
	BlockId string `json:"blockId"`
	// Additional services (extras, add-ons) that should be added to the reservation
	Services *[]BookReservationServiceModel `json:"services,omitempty"`
	// Date of arrival and the optional time with UTC offset<br />Specify either a pure date or a date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	Arrival string `json:"arrival"`
	// Date of departure and the optional time with UTC offset<br />Specify either a pure date or a date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	Departure string `json:"departure"`
	// Number of adults
	Adults int32 `json:"adults"`
	// The ages of the children
	ChildrenAges *[]int32 `json:"childrenAges,omitempty"`
	// Additional information and comments
	Comment *string `json:"comment,omitempty"`
	// Additional information and comment by the guest
	GuestComment *string `json:"guestComment,omitempty"`
	PrimaryGuest *GuestModel `json:"primaryGuest,omitempty"`
	// Additional guests of the reservation.
	AdditionalGuests *[]GuestModel `json:"additionalGuests,omitempty"`
	// The purpose of the trip, leisure or business
	TravelPurpose *string `json:"travelPurpose,omitempty"`
}

// NewPickUpReservationModel instantiates a new PickUpReservationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPickUpReservationModel(blockId string, arrival string, departure string, adults int32) *PickUpReservationModel {
	this := PickUpReservationModel{}
	this.BlockId = blockId
	this.Arrival = arrival
	this.Departure = departure
	this.Adults = adults
	return &this
}

// NewPickUpReservationModelWithDefaults instantiates a new PickUpReservationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPickUpReservationModelWithDefaults() *PickUpReservationModel {
	this := PickUpReservationModel{}
	return &this
}

// GetBlockId returns the BlockId field value
func (o *PickUpReservationModel) GetBlockId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetBlockIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BlockId, true
}

// SetBlockId sets field value
func (o *PickUpReservationModel) SetBlockId(v string) {
	o.BlockId = v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *PickUpReservationModel) GetServices() []BookReservationServiceModel {
	if o == nil || o.Services == nil {
		var ret []BookReservationServiceModel
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetServicesOk() (*[]BookReservationServiceModel, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *PickUpReservationModel) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []BookReservationServiceModel and assigns it to the Services field.
func (o *PickUpReservationModel) SetServices(v []BookReservationServiceModel) {
	o.Services = &v
}

// GetArrival returns the Arrival field value
func (o *PickUpReservationModel) GetArrival() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Arrival
}

// GetArrivalOk returns a tuple with the Arrival field value
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetArrivalOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Arrival, true
}

// SetArrival sets field value
func (o *PickUpReservationModel) SetArrival(v string) {
	o.Arrival = v
}

// GetDeparture returns the Departure field value
func (o *PickUpReservationModel) GetDeparture() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Departure
}

// GetDepartureOk returns a tuple with the Departure field value
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetDepartureOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Departure, true
}

// SetDeparture sets field value
func (o *PickUpReservationModel) SetDeparture(v string) {
	o.Departure = v
}

// GetAdults returns the Adults field value
func (o *PickUpReservationModel) GetAdults() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Adults
}

// GetAdultsOk returns a tuple with the Adults field value
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetAdultsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Adults, true
}

// SetAdults sets field value
func (o *PickUpReservationModel) SetAdults(v int32) {
	o.Adults = v
}

// GetChildrenAges returns the ChildrenAges field value if set, zero value otherwise.
func (o *PickUpReservationModel) GetChildrenAges() []int32 {
	if o == nil || o.ChildrenAges == nil {
		var ret []int32
		return ret
	}
	return *o.ChildrenAges
}

// GetChildrenAgesOk returns a tuple with the ChildrenAges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetChildrenAgesOk() (*[]int32, bool) {
	if o == nil || o.ChildrenAges == nil {
		return nil, false
	}
	return o.ChildrenAges, true
}

// HasChildrenAges returns a boolean if a field has been set.
func (o *PickUpReservationModel) HasChildrenAges() bool {
	if o != nil && o.ChildrenAges != nil {
		return true
	}

	return false
}

// SetChildrenAges gets a reference to the given []int32 and assigns it to the ChildrenAges field.
func (o *PickUpReservationModel) SetChildrenAges(v []int32) {
	o.ChildrenAges = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *PickUpReservationModel) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *PickUpReservationModel) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *PickUpReservationModel) SetComment(v string) {
	o.Comment = &v
}

// GetGuestComment returns the GuestComment field value if set, zero value otherwise.
func (o *PickUpReservationModel) GetGuestComment() string {
	if o == nil || o.GuestComment == nil {
		var ret string
		return ret
	}
	return *o.GuestComment
}

// GetGuestCommentOk returns a tuple with the GuestComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetGuestCommentOk() (*string, bool) {
	if o == nil || o.GuestComment == nil {
		return nil, false
	}
	return o.GuestComment, true
}

// HasGuestComment returns a boolean if a field has been set.
func (o *PickUpReservationModel) HasGuestComment() bool {
	if o != nil && o.GuestComment != nil {
		return true
	}

	return false
}

// SetGuestComment gets a reference to the given string and assigns it to the GuestComment field.
func (o *PickUpReservationModel) SetGuestComment(v string) {
	o.GuestComment = &v
}

// GetPrimaryGuest returns the PrimaryGuest field value if set, zero value otherwise.
func (o *PickUpReservationModel) GetPrimaryGuest() GuestModel {
	if o == nil || o.PrimaryGuest == nil {
		var ret GuestModel
		return ret
	}
	return *o.PrimaryGuest
}

// GetPrimaryGuestOk returns a tuple with the PrimaryGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetPrimaryGuestOk() (*GuestModel, bool) {
	if o == nil || o.PrimaryGuest == nil {
		return nil, false
	}
	return o.PrimaryGuest, true
}

// HasPrimaryGuest returns a boolean if a field has been set.
func (o *PickUpReservationModel) HasPrimaryGuest() bool {
	if o != nil && o.PrimaryGuest != nil {
		return true
	}

	return false
}

// SetPrimaryGuest gets a reference to the given GuestModel and assigns it to the PrimaryGuest field.
func (o *PickUpReservationModel) SetPrimaryGuest(v GuestModel) {
	o.PrimaryGuest = &v
}

// GetAdditionalGuests returns the AdditionalGuests field value if set, zero value otherwise.
func (o *PickUpReservationModel) GetAdditionalGuests() []GuestModel {
	if o == nil || o.AdditionalGuests == nil {
		var ret []GuestModel
		return ret
	}
	return *o.AdditionalGuests
}

// GetAdditionalGuestsOk returns a tuple with the AdditionalGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetAdditionalGuestsOk() (*[]GuestModel, bool) {
	if o == nil || o.AdditionalGuests == nil {
		return nil, false
	}
	return o.AdditionalGuests, true
}

// HasAdditionalGuests returns a boolean if a field has been set.
func (o *PickUpReservationModel) HasAdditionalGuests() bool {
	if o != nil && o.AdditionalGuests != nil {
		return true
	}

	return false
}

// SetAdditionalGuests gets a reference to the given []GuestModel and assigns it to the AdditionalGuests field.
func (o *PickUpReservationModel) SetAdditionalGuests(v []GuestModel) {
	o.AdditionalGuests = &v
}

// GetTravelPurpose returns the TravelPurpose field value if set, zero value otherwise.
func (o *PickUpReservationModel) GetTravelPurpose() string {
	if o == nil || o.TravelPurpose == nil {
		var ret string
		return ret
	}
	return *o.TravelPurpose
}

// GetTravelPurposeOk returns a tuple with the TravelPurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PickUpReservationModel) GetTravelPurposeOk() (*string, bool) {
	if o == nil || o.TravelPurpose == nil {
		return nil, false
	}
	return o.TravelPurpose, true
}

// HasTravelPurpose returns a boolean if a field has been set.
func (o *PickUpReservationModel) HasTravelPurpose() bool {
	if o != nil && o.TravelPurpose != nil {
		return true
	}

	return false
}

// SetTravelPurpose gets a reference to the given string and assigns it to the TravelPurpose field.
func (o *PickUpReservationModel) SetTravelPurpose(v string) {
	o.TravelPurpose = &v
}

func (o PickUpReservationModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["blockId"] = o.BlockId
	}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	if true {
		toSerialize["arrival"] = o.Arrival
	}
	if true {
		toSerialize["departure"] = o.Departure
	}
	if true {
		toSerialize["adults"] = o.Adults
	}
	if o.ChildrenAges != nil {
		toSerialize["childrenAges"] = o.ChildrenAges
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.GuestComment != nil {
		toSerialize["guestComment"] = o.GuestComment
	}
	if o.PrimaryGuest != nil {
		toSerialize["primaryGuest"] = o.PrimaryGuest
	}
	if o.AdditionalGuests != nil {
		toSerialize["additionalGuests"] = o.AdditionalGuests
	}
	if o.TravelPurpose != nil {
		toSerialize["travelPurpose"] = o.TravelPurpose
	}
	return json.Marshal(toSerialize)
}

type NullablePickUpReservationModel struct {
	value *PickUpReservationModel
	isSet bool
}

func (v NullablePickUpReservationModel) Get() *PickUpReservationModel {
	return v.value
}

func (v *NullablePickUpReservationModel) Set(val *PickUpReservationModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePickUpReservationModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePickUpReservationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePickUpReservationModel(val *PickUpReservationModel) *NullablePickUpReservationModel {
	return &NullablePickUpReservationModel{value: val, isSet: true}
}

func (v NullablePickUpReservationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePickUpReservationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


