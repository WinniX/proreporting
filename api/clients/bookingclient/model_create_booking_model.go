/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// CreateBookingModel With this request you can create a booking
type CreateBookingModel struct {
	PaymentAccount *CreatePaymentAccountModel `json:"paymentAccount,omitempty"`
	Booker BookerModel `json:"booker"`
	// Additional information and comments
	Comment *string `json:"comment,omitempty"`
	// Additional information and comments by the booker
	BookerComment *string `json:"bookerComment,omitempty"`
	// List of reservations to create
	Reservations []CreateReservationModel `json:"reservations"`
	// The reference of a payment transaction. This should be set when a payment transaction has been initiated and should be used to complete the transaction upon reservation creation.
	TransactionReference *string `json:"transactionReference,omitempty"`
}

// NewCreateBookingModel instantiates a new CreateBookingModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBookingModel(booker BookerModel, reservations []CreateReservationModel) *CreateBookingModel {
	this := CreateBookingModel{}
	this.Booker = booker
	this.Reservations = reservations
	return &this
}

// NewCreateBookingModelWithDefaults instantiates a new CreateBookingModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBookingModelWithDefaults() *CreateBookingModel {
	this := CreateBookingModel{}
	return &this
}

// GetPaymentAccount returns the PaymentAccount field value if set, zero value otherwise.
func (o *CreateBookingModel) GetPaymentAccount() CreatePaymentAccountModel {
	if o == nil || o.PaymentAccount == nil {
		var ret CreatePaymentAccountModel
		return ret
	}
	return *o.PaymentAccount
}

// GetPaymentAccountOk returns a tuple with the PaymentAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingModel) GetPaymentAccountOk() (*CreatePaymentAccountModel, bool) {
	if o == nil || o.PaymentAccount == nil {
		return nil, false
	}
	return o.PaymentAccount, true
}

// HasPaymentAccount returns a boolean if a field has been set.
func (o *CreateBookingModel) HasPaymentAccount() bool {
	if o != nil && o.PaymentAccount != nil {
		return true
	}

	return false
}

// SetPaymentAccount gets a reference to the given CreatePaymentAccountModel and assigns it to the PaymentAccount field.
func (o *CreateBookingModel) SetPaymentAccount(v CreatePaymentAccountModel) {
	o.PaymentAccount = &v
}

// GetBooker returns the Booker field value
func (o *CreateBookingModel) GetBooker() BookerModel {
	if o == nil {
		var ret BookerModel
		return ret
	}

	return o.Booker
}

// GetBookerOk returns a tuple with the Booker field value
// and a boolean to check if the value has been set.
func (o *CreateBookingModel) GetBookerOk() (*BookerModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Booker, true
}

// SetBooker sets field value
func (o *CreateBookingModel) SetBooker(v BookerModel) {
	o.Booker = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *CreateBookingModel) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingModel) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *CreateBookingModel) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *CreateBookingModel) SetComment(v string) {
	o.Comment = &v
}

// GetBookerComment returns the BookerComment field value if set, zero value otherwise.
func (o *CreateBookingModel) GetBookerComment() string {
	if o == nil || o.BookerComment == nil {
		var ret string
		return ret
	}
	return *o.BookerComment
}

// GetBookerCommentOk returns a tuple with the BookerComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingModel) GetBookerCommentOk() (*string, bool) {
	if o == nil || o.BookerComment == nil {
		return nil, false
	}
	return o.BookerComment, true
}

// HasBookerComment returns a boolean if a field has been set.
func (o *CreateBookingModel) HasBookerComment() bool {
	if o != nil && o.BookerComment != nil {
		return true
	}

	return false
}

// SetBookerComment gets a reference to the given string and assigns it to the BookerComment field.
func (o *CreateBookingModel) SetBookerComment(v string) {
	o.BookerComment = &v
}

// GetReservations returns the Reservations field value
func (o *CreateBookingModel) GetReservations() []CreateReservationModel {
	if o == nil {
		var ret []CreateReservationModel
		return ret
	}

	return o.Reservations
}

// GetReservationsOk returns a tuple with the Reservations field value
// and a boolean to check if the value has been set.
func (o *CreateBookingModel) GetReservationsOk() (*[]CreateReservationModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reservations, true
}

// SetReservations sets field value
func (o *CreateBookingModel) SetReservations(v []CreateReservationModel) {
	o.Reservations = v
}

// GetTransactionReference returns the TransactionReference field value if set, zero value otherwise.
func (o *CreateBookingModel) GetTransactionReference() string {
	if o == nil || o.TransactionReference == nil {
		var ret string
		return ret
	}
	return *o.TransactionReference
}

// GetTransactionReferenceOk returns a tuple with the TransactionReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookingModel) GetTransactionReferenceOk() (*string, bool) {
	if o == nil || o.TransactionReference == nil {
		return nil, false
	}
	return o.TransactionReference, true
}

// HasTransactionReference returns a boolean if a field has been set.
func (o *CreateBookingModel) HasTransactionReference() bool {
	if o != nil && o.TransactionReference != nil {
		return true
	}

	return false
}

// SetTransactionReference gets a reference to the given string and assigns it to the TransactionReference field.
func (o *CreateBookingModel) SetTransactionReference(v string) {
	o.TransactionReference = &v
}

func (o CreateBookingModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PaymentAccount != nil {
		toSerialize["paymentAccount"] = o.PaymentAccount
	}
	if true {
		toSerialize["booker"] = o.Booker
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.BookerComment != nil {
		toSerialize["bookerComment"] = o.BookerComment
	}
	if true {
		toSerialize["reservations"] = o.Reservations
	}
	if o.TransactionReference != nil {
		toSerialize["transactionReference"] = o.TransactionReference
	}
	return json.Marshal(toSerialize)
}

type NullableCreateBookingModel struct {
	value *CreateBookingModel
	isSet bool
}

func (v NullableCreateBookingModel) Get() *CreateBookingModel {
	return v.value
}

func (v *NullableCreateBookingModel) Set(val *CreateBookingModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBookingModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBookingModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBookingModel(val *CreateBookingModel) *NullableCreateBookingModel {
	return &NullableCreateBookingModel{value: val, isSet: true}
}

func (v NullableCreateBookingModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBookingModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


