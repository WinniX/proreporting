/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// ActionModelBlockActionNotAllowedBlockActionReason struct for ActionModelBlockActionNotAllowedBlockActionReason
type ActionModelBlockActionNotAllowedBlockActionReason struct {
	Action string `json:"action"`
	IsAllowed bool `json:"isAllowed"`
	Reasons *[]ActionReasonModelNotAllowedBlockActionReason `json:"reasons,omitempty"`
}

// NewActionModelBlockActionNotAllowedBlockActionReason instantiates a new ActionModelBlockActionNotAllowedBlockActionReason object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionModelBlockActionNotAllowedBlockActionReason(action string, isAllowed bool) *ActionModelBlockActionNotAllowedBlockActionReason {
	this := ActionModelBlockActionNotAllowedBlockActionReason{}
	this.Action = action
	this.IsAllowed = isAllowed
	return &this
}

// NewActionModelBlockActionNotAllowedBlockActionReasonWithDefaults instantiates a new ActionModelBlockActionNotAllowedBlockActionReason object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionModelBlockActionNotAllowedBlockActionReasonWithDefaults() *ActionModelBlockActionNotAllowedBlockActionReason {
	this := ActionModelBlockActionNotAllowedBlockActionReason{}
	return &this
}

// GetAction returns the Action field value
func (o *ActionModelBlockActionNotAllowedBlockActionReason) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ActionModelBlockActionNotAllowedBlockActionReason) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ActionModelBlockActionNotAllowedBlockActionReason) SetAction(v string) {
	o.Action = v
}

// GetIsAllowed returns the IsAllowed field value
func (o *ActionModelBlockActionNotAllowedBlockActionReason) GetIsAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAllowed
}

// GetIsAllowedOk returns a tuple with the IsAllowed field value
// and a boolean to check if the value has been set.
func (o *ActionModelBlockActionNotAllowedBlockActionReason) GetIsAllowedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsAllowed, true
}

// SetIsAllowed sets field value
func (o *ActionModelBlockActionNotAllowedBlockActionReason) SetIsAllowed(v bool) {
	o.IsAllowed = v
}

// GetReasons returns the Reasons field value if set, zero value otherwise.
func (o *ActionModelBlockActionNotAllowedBlockActionReason) GetReasons() []ActionReasonModelNotAllowedBlockActionReason {
	if o == nil || o.Reasons == nil {
		var ret []ActionReasonModelNotAllowedBlockActionReason
		return ret
	}
	return *o.Reasons
}

// GetReasonsOk returns a tuple with the Reasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionModelBlockActionNotAllowedBlockActionReason) GetReasonsOk() (*[]ActionReasonModelNotAllowedBlockActionReason, bool) {
	if o == nil || o.Reasons == nil {
		return nil, false
	}
	return o.Reasons, true
}

// HasReasons returns a boolean if a field has been set.
func (o *ActionModelBlockActionNotAllowedBlockActionReason) HasReasons() bool {
	if o != nil && o.Reasons != nil {
		return true
	}

	return false
}

// SetReasons gets a reference to the given []ActionReasonModelNotAllowedBlockActionReason and assigns it to the Reasons field.
func (o *ActionModelBlockActionNotAllowedBlockActionReason) SetReasons(v []ActionReasonModelNotAllowedBlockActionReason) {
	o.Reasons = &v
}

func (o ActionModelBlockActionNotAllowedBlockActionReason) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	if true {
		toSerialize["isAllowed"] = o.IsAllowed
	}
	if o.Reasons != nil {
		toSerialize["reasons"] = o.Reasons
	}
	return json.Marshal(toSerialize)
}

type NullableActionModelBlockActionNotAllowedBlockActionReason struct {
	value *ActionModelBlockActionNotAllowedBlockActionReason
	isSet bool
}

func (v NullableActionModelBlockActionNotAllowedBlockActionReason) Get() *ActionModelBlockActionNotAllowedBlockActionReason {
	return v.value
}

func (v *NullableActionModelBlockActionNotAllowedBlockActionReason) Set(val *ActionModelBlockActionNotAllowedBlockActionReason) {
	v.value = val
	v.isSet = true
}

func (v NullableActionModelBlockActionNotAllowedBlockActionReason) IsSet() bool {
	return v.isSet
}

func (v *NullableActionModelBlockActionNotAllowedBlockActionReason) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionModelBlockActionNotAllowedBlockActionReason(val *ActionModelBlockActionNotAllowedBlockActionReason) *NullableActionModelBlockActionNotAllowedBlockActionReason {
	return &NullableActionModelBlockActionNotAllowedBlockActionReason{value: val, isSet: true}
}

func (v NullableActionModelBlockActionNotAllowedBlockActionReason) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionModelBlockActionNotAllowedBlockActionReason) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


