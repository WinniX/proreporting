/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// PriceModel struct for PriceModel
type PriceModel struct {
	// Price including all included services and VAT - <b>DEPRECATED: This field will be removed soon, use BeforeTax + Taxes.Tax instead</b>
	GrossAmount float64 `json:"grossAmount"`
	// Price including all included services without VAT or any other taxes like city tax
	BeforeTax float64 `json:"beforeTax"`
	// Price including all included services, VAT and any other taxes like city tax
	AfterTax float64 `json:"afterTax"`
	Taxes TaxesModel `json:"taxes"`
	// The currency for all prices and tax details
	Currency string `json:"currency"`
}

// NewPriceModel instantiates a new PriceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceModel(grossAmount float64, beforeTax float64, afterTax float64, taxes TaxesModel, currency string) *PriceModel {
	this := PriceModel{}
	this.GrossAmount = grossAmount
	this.BeforeTax = beforeTax
	this.AfterTax = afterTax
	this.Taxes = taxes
	this.Currency = currency
	return &this
}

// NewPriceModelWithDefaults instantiates a new PriceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceModelWithDefaults() *PriceModel {
	this := PriceModel{}
	return &this
}

// GetGrossAmount returns the GrossAmount field value
func (o *PriceModel) GetGrossAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.GrossAmount
}

// GetGrossAmountOk returns a tuple with the GrossAmount field value
// and a boolean to check if the value has been set.
func (o *PriceModel) GetGrossAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GrossAmount, true
}

// SetGrossAmount sets field value
func (o *PriceModel) SetGrossAmount(v float64) {
	o.GrossAmount = v
}

// GetBeforeTax returns the BeforeTax field value
func (o *PriceModel) GetBeforeTax() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.BeforeTax
}

// GetBeforeTaxOk returns a tuple with the BeforeTax field value
// and a boolean to check if the value has been set.
func (o *PriceModel) GetBeforeTaxOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BeforeTax, true
}

// SetBeforeTax sets field value
func (o *PriceModel) SetBeforeTax(v float64) {
	o.BeforeTax = v
}

// GetAfterTax returns the AfterTax field value
func (o *PriceModel) GetAfterTax() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.AfterTax
}

// GetAfterTaxOk returns a tuple with the AfterTax field value
// and a boolean to check if the value has been set.
func (o *PriceModel) GetAfterTaxOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AfterTax, true
}

// SetAfterTax sets field value
func (o *PriceModel) SetAfterTax(v float64) {
	o.AfterTax = v
}

// GetTaxes returns the Taxes field value
func (o *PriceModel) GetTaxes() TaxesModel {
	if o == nil {
		var ret TaxesModel
		return ret
	}

	return o.Taxes
}

// GetTaxesOk returns a tuple with the Taxes field value
// and a boolean to check if the value has been set.
func (o *PriceModel) GetTaxesOk() (*TaxesModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Taxes, true
}

// SetTaxes sets field value
func (o *PriceModel) SetTaxes(v TaxesModel) {
	o.Taxes = v
}

// GetCurrency returns the Currency field value
func (o *PriceModel) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *PriceModel) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *PriceModel) SetCurrency(v string) {
	o.Currency = v
}

func (o PriceModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["grossAmount"] = o.GrossAmount
	}
	if true {
		toSerialize["beforeTax"] = o.BeforeTax
	}
	if true {
		toSerialize["afterTax"] = o.AfterTax
	}
	if true {
		toSerialize["taxes"] = o.Taxes
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	return json.Marshal(toSerialize)
}

type NullablePriceModel struct {
	value *PriceModel
	isSet bool
}

func (v NullablePriceModel) Get() *PriceModel {
	return v.value
}

func (v *NullablePriceModel) Set(val *PriceModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceModel(val *PriceModel) *NullablePriceModel {
	return &NullablePriceModel{value: val, isSet: true}
}

func (v NullablePriceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


