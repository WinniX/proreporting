/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// TaxDetailModel struct for TaxDetailModel
type TaxDetailModel struct {
	VatType string `json:"vatType"`
	VatPercent float64 `json:"vatPercent"`
	Net MonetaryValueModel `json:"net"`
	Tax MonetaryValueModel `json:"tax"`
}

// NewTaxDetailModel instantiates a new TaxDetailModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaxDetailModel(vatType string, vatPercent float64, net MonetaryValueModel, tax MonetaryValueModel) *TaxDetailModel {
	this := TaxDetailModel{}
	this.VatType = vatType
	this.VatPercent = vatPercent
	this.Net = net
	this.Tax = tax
	return &this
}

// NewTaxDetailModelWithDefaults instantiates a new TaxDetailModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaxDetailModelWithDefaults() *TaxDetailModel {
	this := TaxDetailModel{}
	return &this
}

// GetVatType returns the VatType field value
func (o *TaxDetailModel) GetVatType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VatType
}

// GetVatTypeOk returns a tuple with the VatType field value
// and a boolean to check if the value has been set.
func (o *TaxDetailModel) GetVatTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VatType, true
}

// SetVatType sets field value
func (o *TaxDetailModel) SetVatType(v string) {
	o.VatType = v
}

// GetVatPercent returns the VatPercent field value
func (o *TaxDetailModel) GetVatPercent() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.VatPercent
}

// GetVatPercentOk returns a tuple with the VatPercent field value
// and a boolean to check if the value has been set.
func (o *TaxDetailModel) GetVatPercentOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VatPercent, true
}

// SetVatPercent sets field value
func (o *TaxDetailModel) SetVatPercent(v float64) {
	o.VatPercent = v
}

// GetNet returns the Net field value
func (o *TaxDetailModel) GetNet() MonetaryValueModel {
	if o == nil {
		var ret MonetaryValueModel
		return ret
	}

	return o.Net
}

// GetNetOk returns a tuple with the Net field value
// and a boolean to check if the value has been set.
func (o *TaxDetailModel) GetNetOk() (*MonetaryValueModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Net, true
}

// SetNet sets field value
func (o *TaxDetailModel) SetNet(v MonetaryValueModel) {
	o.Net = v
}

// GetTax returns the Tax field value
func (o *TaxDetailModel) GetTax() MonetaryValueModel {
	if o == nil {
		var ret MonetaryValueModel
		return ret
	}

	return o.Tax
}

// GetTaxOk returns a tuple with the Tax field value
// and a boolean to check if the value has been set.
func (o *TaxDetailModel) GetTaxOk() (*MonetaryValueModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tax, true
}

// SetTax sets field value
func (o *TaxDetailModel) SetTax(v MonetaryValueModel) {
	o.Tax = v
}

func (o TaxDetailModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vatType"] = o.VatType
	}
	if true {
		toSerialize["vatPercent"] = o.VatPercent
	}
	if true {
		toSerialize["net"] = o.Net
	}
	if true {
		toSerialize["tax"] = o.Tax
	}
	return json.Marshal(toSerialize)
}

type NullableTaxDetailModel struct {
	value *TaxDetailModel
	isSet bool
}

func (v NullableTaxDetailModel) Get() *TaxDetailModel {
	return v.value
}

func (v *NullableTaxDetailModel) Set(val *TaxDetailModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTaxDetailModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTaxDetailModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaxDetailModel(val *TaxDetailModel) *NullableTaxDetailModel {
	return &NullableTaxDetailModel{value: val, isSet: true}
}

func (v NullableTaxDetailModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaxDetailModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


