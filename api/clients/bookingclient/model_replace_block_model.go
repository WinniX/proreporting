/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// ReplaceBlockModel struct for ReplaceBlockModel
type ReplaceBlockModel struct {
	// Start date and time from which the inventory will be blocked<br />Specify either a pure date or a date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	From string `json:"from"`
	// End date and time until which the inventory will be blocked. Cannot be more than 5 years after the start date.<br />Specify either a pure date or a date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	To string `json:"to"`
	GrossDailyRate MonetaryValueModel `json:"grossDailyRate"`
	// The list of time slices
	TimeSlices []CreateBlockTimeSliceModel `json:"timeSlices"`
}

// NewReplaceBlockModel instantiates a new ReplaceBlockModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplaceBlockModel(from string, to string, grossDailyRate MonetaryValueModel, timeSlices []CreateBlockTimeSliceModel) *ReplaceBlockModel {
	this := ReplaceBlockModel{}
	this.From = from
	this.To = to
	this.GrossDailyRate = grossDailyRate
	this.TimeSlices = timeSlices
	return &this
}

// NewReplaceBlockModelWithDefaults instantiates a new ReplaceBlockModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplaceBlockModelWithDefaults() *ReplaceBlockModel {
	this := ReplaceBlockModel{}
	return &this
}

// GetFrom returns the From field value
func (o *ReplaceBlockModel) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *ReplaceBlockModel) GetFromOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *ReplaceBlockModel) SetFrom(v string) {
	o.From = v
}

// GetTo returns the To field value
func (o *ReplaceBlockModel) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *ReplaceBlockModel) GetToOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *ReplaceBlockModel) SetTo(v string) {
	o.To = v
}

// GetGrossDailyRate returns the GrossDailyRate field value
func (o *ReplaceBlockModel) GetGrossDailyRate() MonetaryValueModel {
	if o == nil {
		var ret MonetaryValueModel
		return ret
	}

	return o.GrossDailyRate
}

// GetGrossDailyRateOk returns a tuple with the GrossDailyRate field value
// and a boolean to check if the value has been set.
func (o *ReplaceBlockModel) GetGrossDailyRateOk() (*MonetaryValueModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GrossDailyRate, true
}

// SetGrossDailyRate sets field value
func (o *ReplaceBlockModel) SetGrossDailyRate(v MonetaryValueModel) {
	o.GrossDailyRate = v
}

// GetTimeSlices returns the TimeSlices field value
func (o *ReplaceBlockModel) GetTimeSlices() []CreateBlockTimeSliceModel {
	if o == nil {
		var ret []CreateBlockTimeSliceModel
		return ret
	}

	return o.TimeSlices
}

// GetTimeSlicesOk returns a tuple with the TimeSlices field value
// and a boolean to check if the value has been set.
func (o *ReplaceBlockModel) GetTimeSlicesOk() (*[]CreateBlockTimeSliceModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TimeSlices, true
}

// SetTimeSlices sets field value
func (o *ReplaceBlockModel) SetTimeSlices(v []CreateBlockTimeSliceModel) {
	o.TimeSlices = v
}

func (o ReplaceBlockModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["from"] = o.From
	}
	if true {
		toSerialize["to"] = o.To
	}
	if true {
		toSerialize["grossDailyRate"] = o.GrossDailyRate
	}
	if true {
		toSerialize["timeSlices"] = o.TimeSlices
	}
	return json.Marshal(toSerialize)
}

type NullableReplaceBlockModel struct {
	value *ReplaceBlockModel
	isSet bool
}

func (v NullableReplaceBlockModel) Get() *ReplaceBlockModel {
	return v.value
}

func (v *NullableReplaceBlockModel) Set(val *ReplaceBlockModel) {
	v.value = val
	v.isSet = true
}

func (v NullableReplaceBlockModel) IsSet() bool {
	return v.isSet
}

func (v *NullableReplaceBlockModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplaceBlockModel(val *ReplaceBlockModel) *NullableReplaceBlockModel {
	return &NullableReplaceBlockModel{value: val, isSet: true}
}

func (v NullableReplaceBlockModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplaceBlockModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


