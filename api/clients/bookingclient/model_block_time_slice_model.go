/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
	"time"
)

// BlockTimeSliceModel struct for BlockTimeSliceModel
type BlockTimeSliceModel struct {
	// Start date and time from which units will be blocked<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	From time.Time `json:"from"`
	// End date and time until which units will be blocked<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	To time.Time `json:"to"`
	// Number of units blocked for this time slice
	BlockedUnits int32 `json:"blockedUnits"`
	// Number of units which have picked reservations for this time slice
	PickedUnits int32 `json:"pickedUnits"`
	BaseAmount AmountModel `json:"baseAmount"`
	TotalGrossAmount MonetaryValueModel `json:"totalGrossAmount"`
}

// NewBlockTimeSliceModel instantiates a new BlockTimeSliceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockTimeSliceModel(from time.Time, to time.Time, blockedUnits int32, pickedUnits int32, baseAmount AmountModel, totalGrossAmount MonetaryValueModel) *BlockTimeSliceModel {
	this := BlockTimeSliceModel{}
	this.From = from
	this.To = to
	this.BlockedUnits = blockedUnits
	this.PickedUnits = pickedUnits
	this.BaseAmount = baseAmount
	this.TotalGrossAmount = totalGrossAmount
	return &this
}

// NewBlockTimeSliceModelWithDefaults instantiates a new BlockTimeSliceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockTimeSliceModelWithDefaults() *BlockTimeSliceModel {
	this := BlockTimeSliceModel{}
	return &this
}

// GetFrom returns the From field value
func (o *BlockTimeSliceModel) GetFrom() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *BlockTimeSliceModel) GetFromOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *BlockTimeSliceModel) SetFrom(v time.Time) {
	o.From = v
}

// GetTo returns the To field value
func (o *BlockTimeSliceModel) GetTo() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *BlockTimeSliceModel) GetToOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *BlockTimeSliceModel) SetTo(v time.Time) {
	o.To = v
}

// GetBlockedUnits returns the BlockedUnits field value
func (o *BlockTimeSliceModel) GetBlockedUnits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BlockedUnits
}

// GetBlockedUnitsOk returns a tuple with the BlockedUnits field value
// and a boolean to check if the value has been set.
func (o *BlockTimeSliceModel) GetBlockedUnitsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BlockedUnits, true
}

// SetBlockedUnits sets field value
func (o *BlockTimeSliceModel) SetBlockedUnits(v int32) {
	o.BlockedUnits = v
}

// GetPickedUnits returns the PickedUnits field value
func (o *BlockTimeSliceModel) GetPickedUnits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PickedUnits
}

// GetPickedUnitsOk returns a tuple with the PickedUnits field value
// and a boolean to check if the value has been set.
func (o *BlockTimeSliceModel) GetPickedUnitsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PickedUnits, true
}

// SetPickedUnits sets field value
func (o *BlockTimeSliceModel) SetPickedUnits(v int32) {
	o.PickedUnits = v
}

// GetBaseAmount returns the BaseAmount field value
func (o *BlockTimeSliceModel) GetBaseAmount() AmountModel {
	if o == nil {
		var ret AmountModel
		return ret
	}

	return o.BaseAmount
}

// GetBaseAmountOk returns a tuple with the BaseAmount field value
// and a boolean to check if the value has been set.
func (o *BlockTimeSliceModel) GetBaseAmountOk() (*AmountModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BaseAmount, true
}

// SetBaseAmount sets field value
func (o *BlockTimeSliceModel) SetBaseAmount(v AmountModel) {
	o.BaseAmount = v
}

// GetTotalGrossAmount returns the TotalGrossAmount field value
func (o *BlockTimeSliceModel) GetTotalGrossAmount() MonetaryValueModel {
	if o == nil {
		var ret MonetaryValueModel
		return ret
	}

	return o.TotalGrossAmount
}

// GetTotalGrossAmountOk returns a tuple with the TotalGrossAmount field value
// and a boolean to check if the value has been set.
func (o *BlockTimeSliceModel) GetTotalGrossAmountOk() (*MonetaryValueModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalGrossAmount, true
}

// SetTotalGrossAmount sets field value
func (o *BlockTimeSliceModel) SetTotalGrossAmount(v MonetaryValueModel) {
	o.TotalGrossAmount = v
}

func (o BlockTimeSliceModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["from"] = o.From
	}
	if true {
		toSerialize["to"] = o.To
	}
	if true {
		toSerialize["blockedUnits"] = o.BlockedUnits
	}
	if true {
		toSerialize["pickedUnits"] = o.PickedUnits
	}
	if true {
		toSerialize["baseAmount"] = o.BaseAmount
	}
	if true {
		toSerialize["totalGrossAmount"] = o.TotalGrossAmount
	}
	return json.Marshal(toSerialize)
}

type NullableBlockTimeSliceModel struct {
	value *BlockTimeSliceModel
	isSet bool
}

func (v NullableBlockTimeSliceModel) Get() *BlockTimeSliceModel {
	return v.value
}

func (v *NullableBlockTimeSliceModel) Set(val *BlockTimeSliceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockTimeSliceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockTimeSliceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockTimeSliceModel(val *BlockTimeSliceModel) *NullableBlockTimeSliceModel {
	return &NullableBlockTimeSliceModel{value: val, isSet: true}
}

func (v NullableBlockTimeSliceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockTimeSliceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


