/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// CreatePaymentAccountModel struct for CreatePaymentAccountModel
type CreatePaymentAccountModel struct {
	// The account number (e.g. masked credit card number or last 4 digits)
	AccountNumber *string `json:"accountNumber,omitempty"`
	// The account holder (e.g. card holder)
	AccountHolder *string `json:"accountHolder,omitempty"`
	// The credit card's expiration month
	ExpiryMonth *string `json:"expiryMonth,omitempty"`
	// The credit card's expiration year
	ExpiryYear *string `json:"expiryYear,omitempty"`
	// The payment method (e.g. visa)
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// The email address of the shopper / customer
	PayerEmail *string `json:"payerEmail,omitempty"`
	// The reference used to uniquely identify the shopper (e.g. user ID or account ID). Used for recurring payments
	PayerReference *string `json:"payerReference,omitempty"`
	// The reference of a payment transaction. This should be set when a payment transaction has been initiated and should be used to complete the transaction upon reservation creation. - <b>DEPRECATED: This property will be removed 17.07.2021. Use `TransactionReference` on the booking/reservation model instead</b>
	TransactionReference *string `json:"transactionReference,omitempty"`
	// Indicates if the payment account is a virtual credit card. If not specified it defaults to 'false'
	IsVirtual *bool `json:"isVirtual,omitempty"`
	// A reason why account is inactive when PayerReference was not provided
	InactiveReason *string `json:"inactiveReason,omitempty"`
}

// NewCreatePaymentAccountModel instantiates a new CreatePaymentAccountModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePaymentAccountModel() *CreatePaymentAccountModel {
	this := CreatePaymentAccountModel{}
	return &this
}

// NewCreatePaymentAccountModelWithDefaults instantiates a new CreatePaymentAccountModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePaymentAccountModelWithDefaults() *CreatePaymentAccountModel {
	this := CreatePaymentAccountModel{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetAccountNumber() string {
	if o == nil || o.AccountNumber == nil {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetAccountNumberOk() (*string, bool) {
	if o == nil || o.AccountNumber == nil {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasAccountNumber() bool {
	if o != nil && o.AccountNumber != nil {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *CreatePaymentAccountModel) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetAccountHolder returns the AccountHolder field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetAccountHolder() string {
	if o == nil || o.AccountHolder == nil {
		var ret string
		return ret
	}
	return *o.AccountHolder
}

// GetAccountHolderOk returns a tuple with the AccountHolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetAccountHolderOk() (*string, bool) {
	if o == nil || o.AccountHolder == nil {
		return nil, false
	}
	return o.AccountHolder, true
}

// HasAccountHolder returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasAccountHolder() bool {
	if o != nil && o.AccountHolder != nil {
		return true
	}

	return false
}

// SetAccountHolder gets a reference to the given string and assigns it to the AccountHolder field.
func (o *CreatePaymentAccountModel) SetAccountHolder(v string) {
	o.AccountHolder = &v
}

// GetExpiryMonth returns the ExpiryMonth field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetExpiryMonth() string {
	if o == nil || o.ExpiryMonth == nil {
		var ret string
		return ret
	}
	return *o.ExpiryMonth
}

// GetExpiryMonthOk returns a tuple with the ExpiryMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetExpiryMonthOk() (*string, bool) {
	if o == nil || o.ExpiryMonth == nil {
		return nil, false
	}
	return o.ExpiryMonth, true
}

// HasExpiryMonth returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasExpiryMonth() bool {
	if o != nil && o.ExpiryMonth != nil {
		return true
	}

	return false
}

// SetExpiryMonth gets a reference to the given string and assigns it to the ExpiryMonth field.
func (o *CreatePaymentAccountModel) SetExpiryMonth(v string) {
	o.ExpiryMonth = &v
}

// GetExpiryYear returns the ExpiryYear field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetExpiryYear() string {
	if o == nil || o.ExpiryYear == nil {
		var ret string
		return ret
	}
	return *o.ExpiryYear
}

// GetExpiryYearOk returns a tuple with the ExpiryYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetExpiryYearOk() (*string, bool) {
	if o == nil || o.ExpiryYear == nil {
		return nil, false
	}
	return o.ExpiryYear, true
}

// HasExpiryYear returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasExpiryYear() bool {
	if o != nil && o.ExpiryYear != nil {
		return true
	}

	return false
}

// SetExpiryYear gets a reference to the given string and assigns it to the ExpiryYear field.
func (o *CreatePaymentAccountModel) SetExpiryYear(v string) {
	o.ExpiryYear = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetPaymentMethod() string {
	if o == nil || o.PaymentMethod == nil {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetPaymentMethodOk() (*string, bool) {
	if o == nil || o.PaymentMethod == nil {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasPaymentMethod() bool {
	if o != nil && o.PaymentMethod != nil {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *CreatePaymentAccountModel) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPayerEmail returns the PayerEmail field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetPayerEmail() string {
	if o == nil || o.PayerEmail == nil {
		var ret string
		return ret
	}
	return *o.PayerEmail
}

// GetPayerEmailOk returns a tuple with the PayerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetPayerEmailOk() (*string, bool) {
	if o == nil || o.PayerEmail == nil {
		return nil, false
	}
	return o.PayerEmail, true
}

// HasPayerEmail returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasPayerEmail() bool {
	if o != nil && o.PayerEmail != nil {
		return true
	}

	return false
}

// SetPayerEmail gets a reference to the given string and assigns it to the PayerEmail field.
func (o *CreatePaymentAccountModel) SetPayerEmail(v string) {
	o.PayerEmail = &v
}

// GetPayerReference returns the PayerReference field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetPayerReference() string {
	if o == nil || o.PayerReference == nil {
		var ret string
		return ret
	}
	return *o.PayerReference
}

// GetPayerReferenceOk returns a tuple with the PayerReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetPayerReferenceOk() (*string, bool) {
	if o == nil || o.PayerReference == nil {
		return nil, false
	}
	return o.PayerReference, true
}

// HasPayerReference returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasPayerReference() bool {
	if o != nil && o.PayerReference != nil {
		return true
	}

	return false
}

// SetPayerReference gets a reference to the given string and assigns it to the PayerReference field.
func (o *CreatePaymentAccountModel) SetPayerReference(v string) {
	o.PayerReference = &v
}

// GetTransactionReference returns the TransactionReference field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetTransactionReference() string {
	if o == nil || o.TransactionReference == nil {
		var ret string
		return ret
	}
	return *o.TransactionReference
}

// GetTransactionReferenceOk returns a tuple with the TransactionReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetTransactionReferenceOk() (*string, bool) {
	if o == nil || o.TransactionReference == nil {
		return nil, false
	}
	return o.TransactionReference, true
}

// HasTransactionReference returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasTransactionReference() bool {
	if o != nil && o.TransactionReference != nil {
		return true
	}

	return false
}

// SetTransactionReference gets a reference to the given string and assigns it to the TransactionReference field.
func (o *CreatePaymentAccountModel) SetTransactionReference(v string) {
	o.TransactionReference = &v
}

// GetIsVirtual returns the IsVirtual field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetIsVirtual() bool {
	if o == nil || o.IsVirtual == nil {
		var ret bool
		return ret
	}
	return *o.IsVirtual
}

// GetIsVirtualOk returns a tuple with the IsVirtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetIsVirtualOk() (*bool, bool) {
	if o == nil || o.IsVirtual == nil {
		return nil, false
	}
	return o.IsVirtual, true
}

// HasIsVirtual returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasIsVirtual() bool {
	if o != nil && o.IsVirtual != nil {
		return true
	}

	return false
}

// SetIsVirtual gets a reference to the given bool and assigns it to the IsVirtual field.
func (o *CreatePaymentAccountModel) SetIsVirtual(v bool) {
	o.IsVirtual = &v
}

// GetInactiveReason returns the InactiveReason field value if set, zero value otherwise.
func (o *CreatePaymentAccountModel) GetInactiveReason() string {
	if o == nil || o.InactiveReason == nil {
		var ret string
		return ret
	}
	return *o.InactiveReason
}

// GetInactiveReasonOk returns a tuple with the InactiveReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentAccountModel) GetInactiveReasonOk() (*string, bool) {
	if o == nil || o.InactiveReason == nil {
		return nil, false
	}
	return o.InactiveReason, true
}

// HasInactiveReason returns a boolean if a field has been set.
func (o *CreatePaymentAccountModel) HasInactiveReason() bool {
	if o != nil && o.InactiveReason != nil {
		return true
	}

	return false
}

// SetInactiveReason gets a reference to the given string and assigns it to the InactiveReason field.
func (o *CreatePaymentAccountModel) SetInactiveReason(v string) {
	o.InactiveReason = &v
}

func (o CreatePaymentAccountModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountNumber != nil {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if o.AccountHolder != nil {
		toSerialize["accountHolder"] = o.AccountHolder
	}
	if o.ExpiryMonth != nil {
		toSerialize["expiryMonth"] = o.ExpiryMonth
	}
	if o.ExpiryYear != nil {
		toSerialize["expiryYear"] = o.ExpiryYear
	}
	if o.PaymentMethod != nil {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if o.PayerEmail != nil {
		toSerialize["payerEmail"] = o.PayerEmail
	}
	if o.PayerReference != nil {
		toSerialize["payerReference"] = o.PayerReference
	}
	if o.TransactionReference != nil {
		toSerialize["transactionReference"] = o.TransactionReference
	}
	if o.IsVirtual != nil {
		toSerialize["isVirtual"] = o.IsVirtual
	}
	if o.InactiveReason != nil {
		toSerialize["inactiveReason"] = o.InactiveReason
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePaymentAccountModel struct {
	value *CreatePaymentAccountModel
	isSet bool
}

func (v NullableCreatePaymentAccountModel) Get() *CreatePaymentAccountModel {
	return v.value
}

func (v *NullableCreatePaymentAccountModel) Set(val *CreatePaymentAccountModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePaymentAccountModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePaymentAccountModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePaymentAccountModel(val *CreatePaymentAccountModel) *NullableCreatePaymentAccountModel {
	return &NullableCreatePaymentAccountModel{value: val, isSet: true}
}

func (v NullableCreatePaymentAccountModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePaymentAccountModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


