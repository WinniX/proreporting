/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// ServiceOfferItemModel struct for ServiceOfferItemModel
type ServiceOfferItemModel struct {
	// The date this service is delivered
	ServiceDate string `json:"serviceDate"`
	Amount AmountModel `json:"amount"`
	// Depending on the postNextDay setting of the service it will by default be posted before or after midnight.  Breakfast is usually delivered on the next morning, so all the dates from the day after arrival to the departure day  are default dates and will have this flag set to true. Those are also the dates the service will be booked for if  you do not specify dates in the book-service call. Still, you can override this and also book the dates set to IsDefaultDate = false.
	IsDefaultDate bool `json:"isDefaultDate"`
	// Rate plans can have additional services. When booking an offer for such rate plans, those services are automatically booked.  They are marked as mandatory and they cannot be removed.
	IsMandatory bool `json:"isMandatory"`
}

// NewServiceOfferItemModel instantiates a new ServiceOfferItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceOfferItemModel(serviceDate string, amount AmountModel, isDefaultDate bool, isMandatory bool) *ServiceOfferItemModel {
	this := ServiceOfferItemModel{}
	this.ServiceDate = serviceDate
	this.Amount = amount
	this.IsDefaultDate = isDefaultDate
	this.IsMandatory = isMandatory
	return &this
}

// NewServiceOfferItemModelWithDefaults instantiates a new ServiceOfferItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceOfferItemModelWithDefaults() *ServiceOfferItemModel {
	this := ServiceOfferItemModel{}
	return &this
}

// GetServiceDate returns the ServiceDate field value
func (o *ServiceOfferItemModel) GetServiceDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceDate
}

// GetServiceDateOk returns a tuple with the ServiceDate field value
// and a boolean to check if the value has been set.
func (o *ServiceOfferItemModel) GetServiceDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ServiceDate, true
}

// SetServiceDate sets field value
func (o *ServiceOfferItemModel) SetServiceDate(v string) {
	o.ServiceDate = v
}

// GetAmount returns the Amount field value
func (o *ServiceOfferItemModel) GetAmount() AmountModel {
	if o == nil {
		var ret AmountModel
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ServiceOfferItemModel) GetAmountOk() (*AmountModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ServiceOfferItemModel) SetAmount(v AmountModel) {
	o.Amount = v
}

// GetIsDefaultDate returns the IsDefaultDate field value
func (o *ServiceOfferItemModel) GetIsDefaultDate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefaultDate
}

// GetIsDefaultDateOk returns a tuple with the IsDefaultDate field value
// and a boolean to check if the value has been set.
func (o *ServiceOfferItemModel) GetIsDefaultDateOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsDefaultDate, true
}

// SetIsDefaultDate sets field value
func (o *ServiceOfferItemModel) SetIsDefaultDate(v bool) {
	o.IsDefaultDate = v
}

// GetIsMandatory returns the IsMandatory field value
func (o *ServiceOfferItemModel) GetIsMandatory() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMandatory
}

// GetIsMandatoryOk returns a tuple with the IsMandatory field value
// and a boolean to check if the value has been set.
func (o *ServiceOfferItemModel) GetIsMandatoryOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsMandatory, true
}

// SetIsMandatory sets field value
func (o *ServiceOfferItemModel) SetIsMandatory(v bool) {
	o.IsMandatory = v
}

func (o ServiceOfferItemModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serviceDate"] = o.ServiceDate
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["isDefaultDate"] = o.IsDefaultDate
	}
	if true {
		toSerialize["isMandatory"] = o.IsMandatory
	}
	return json.Marshal(toSerialize)
}

type NullableServiceOfferItemModel struct {
	value *ServiceOfferItemModel
	isSet bool
}

func (v NullableServiceOfferItemModel) Get() *ServiceOfferItemModel {
	return v.value
}

func (v *NullableServiceOfferItemModel) Set(val *ServiceOfferItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceOfferItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceOfferItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceOfferItemModel(val *ServiceOfferItemModel) *NullableServiceOfferItemModel {
	return &NullableServiceOfferItemModel{value: val, isSet: true}
}

func (v NullableServiceOfferItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceOfferItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


