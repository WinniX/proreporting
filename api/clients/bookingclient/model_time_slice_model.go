/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
	"time"
)

// TimeSliceModel struct for TimeSliceModel
type TimeSliceModel struct {
	// The start date and time for this time slice<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	From time.Time `json:"from"`
	// The end date and time for this time slice<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	To time.Time `json:"to"`
	// The service date for this time slice
	ServiceDate string `json:"serviceDate"`
	RatePlan EmbeddedRatePlanModel `json:"ratePlan"`
	UnitGroup EmbeddedUnitGroupModel `json:"unitGroup"`
	Unit *EmbeddedUnitModel `json:"unit,omitempty"`
	BaseAmount AmountModel `json:"baseAmount"`
	TotalGrossAmount MonetaryValueModel `json:"totalGrossAmount"`
	// The list of services included in the rate plan (package elements)
	IncludedServices *[]ReservationServiceModel `json:"includedServices,omitempty"`
	// The list of actions allowed for this time slice
	Actions *[]ActionModelReservationTimeSliceActionNotAllowedReservationTimeSliceActionReason `json:"actions,omitempty"`
}

// NewTimeSliceModel instantiates a new TimeSliceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeSliceModel(from time.Time, to time.Time, serviceDate string, ratePlan EmbeddedRatePlanModel, unitGroup EmbeddedUnitGroupModel, baseAmount AmountModel, totalGrossAmount MonetaryValueModel) *TimeSliceModel {
	this := TimeSliceModel{}
	this.From = from
	this.To = to
	this.ServiceDate = serviceDate
	this.RatePlan = ratePlan
	this.UnitGroup = unitGroup
	this.BaseAmount = baseAmount
	this.TotalGrossAmount = totalGrossAmount
	return &this
}

// NewTimeSliceModelWithDefaults instantiates a new TimeSliceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeSliceModelWithDefaults() *TimeSliceModel {
	this := TimeSliceModel{}
	return &this
}

// GetFrom returns the From field value
func (o *TimeSliceModel) GetFrom() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetFromOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *TimeSliceModel) SetFrom(v time.Time) {
	o.From = v
}

// GetTo returns the To field value
func (o *TimeSliceModel) GetTo() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetToOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *TimeSliceModel) SetTo(v time.Time) {
	o.To = v
}

// GetServiceDate returns the ServiceDate field value
func (o *TimeSliceModel) GetServiceDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceDate
}

// GetServiceDateOk returns a tuple with the ServiceDate field value
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetServiceDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ServiceDate, true
}

// SetServiceDate sets field value
func (o *TimeSliceModel) SetServiceDate(v string) {
	o.ServiceDate = v
}

// GetRatePlan returns the RatePlan field value
func (o *TimeSliceModel) GetRatePlan() EmbeddedRatePlanModel {
	if o == nil {
		var ret EmbeddedRatePlanModel
		return ret
	}

	return o.RatePlan
}

// GetRatePlanOk returns a tuple with the RatePlan field value
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetRatePlanOk() (*EmbeddedRatePlanModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RatePlan, true
}

// SetRatePlan sets field value
func (o *TimeSliceModel) SetRatePlan(v EmbeddedRatePlanModel) {
	o.RatePlan = v
}

// GetUnitGroup returns the UnitGroup field value
func (o *TimeSliceModel) GetUnitGroup() EmbeddedUnitGroupModel {
	if o == nil {
		var ret EmbeddedUnitGroupModel
		return ret
	}

	return o.UnitGroup
}

// GetUnitGroupOk returns a tuple with the UnitGroup field value
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetUnitGroupOk() (*EmbeddedUnitGroupModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UnitGroup, true
}

// SetUnitGroup sets field value
func (o *TimeSliceModel) SetUnitGroup(v EmbeddedUnitGroupModel) {
	o.UnitGroup = v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *TimeSliceModel) GetUnit() EmbeddedUnitModel {
	if o == nil || o.Unit == nil {
		var ret EmbeddedUnitModel
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetUnitOk() (*EmbeddedUnitModel, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *TimeSliceModel) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given EmbeddedUnitModel and assigns it to the Unit field.
func (o *TimeSliceModel) SetUnit(v EmbeddedUnitModel) {
	o.Unit = &v
}

// GetBaseAmount returns the BaseAmount field value
func (o *TimeSliceModel) GetBaseAmount() AmountModel {
	if o == nil {
		var ret AmountModel
		return ret
	}

	return o.BaseAmount
}

// GetBaseAmountOk returns a tuple with the BaseAmount field value
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetBaseAmountOk() (*AmountModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BaseAmount, true
}

// SetBaseAmount sets field value
func (o *TimeSliceModel) SetBaseAmount(v AmountModel) {
	o.BaseAmount = v
}

// GetTotalGrossAmount returns the TotalGrossAmount field value
func (o *TimeSliceModel) GetTotalGrossAmount() MonetaryValueModel {
	if o == nil {
		var ret MonetaryValueModel
		return ret
	}

	return o.TotalGrossAmount
}

// GetTotalGrossAmountOk returns a tuple with the TotalGrossAmount field value
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetTotalGrossAmountOk() (*MonetaryValueModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalGrossAmount, true
}

// SetTotalGrossAmount sets field value
func (o *TimeSliceModel) SetTotalGrossAmount(v MonetaryValueModel) {
	o.TotalGrossAmount = v
}

// GetIncludedServices returns the IncludedServices field value if set, zero value otherwise.
func (o *TimeSliceModel) GetIncludedServices() []ReservationServiceModel {
	if o == nil || o.IncludedServices == nil {
		var ret []ReservationServiceModel
		return ret
	}
	return *o.IncludedServices
}

// GetIncludedServicesOk returns a tuple with the IncludedServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetIncludedServicesOk() (*[]ReservationServiceModel, bool) {
	if o == nil || o.IncludedServices == nil {
		return nil, false
	}
	return o.IncludedServices, true
}

// HasIncludedServices returns a boolean if a field has been set.
func (o *TimeSliceModel) HasIncludedServices() bool {
	if o != nil && o.IncludedServices != nil {
		return true
	}

	return false
}

// SetIncludedServices gets a reference to the given []ReservationServiceModel and assigns it to the IncludedServices field.
func (o *TimeSliceModel) SetIncludedServices(v []ReservationServiceModel) {
	o.IncludedServices = &v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *TimeSliceModel) GetActions() []ActionModelReservationTimeSliceActionNotAllowedReservationTimeSliceActionReason {
	if o == nil || o.Actions == nil {
		var ret []ActionModelReservationTimeSliceActionNotAllowedReservationTimeSliceActionReason
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSliceModel) GetActionsOk() (*[]ActionModelReservationTimeSliceActionNotAllowedReservationTimeSliceActionReason, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *TimeSliceModel) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []ActionModelReservationTimeSliceActionNotAllowedReservationTimeSliceActionReason and assigns it to the Actions field.
func (o *TimeSliceModel) SetActions(v []ActionModelReservationTimeSliceActionNotAllowedReservationTimeSliceActionReason) {
	o.Actions = &v
}

func (o TimeSliceModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["from"] = o.From
	}
	if true {
		toSerialize["to"] = o.To
	}
	if true {
		toSerialize["serviceDate"] = o.ServiceDate
	}
	if true {
		toSerialize["ratePlan"] = o.RatePlan
	}
	if true {
		toSerialize["unitGroup"] = o.UnitGroup
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if true {
		toSerialize["baseAmount"] = o.BaseAmount
	}
	if true {
		toSerialize["totalGrossAmount"] = o.TotalGrossAmount
	}
	if o.IncludedServices != nil {
		toSerialize["includedServices"] = o.IncludedServices
	}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	return json.Marshal(toSerialize)
}

type NullableTimeSliceModel struct {
	value *TimeSliceModel
	isSet bool
}

func (v NullableTimeSliceModel) Get() *TimeSliceModel {
	return v.value
}

func (v *NullableTimeSliceModel) Set(val *TimeSliceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeSliceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeSliceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeSliceModel(val *TimeSliceModel) *NullableTimeSliceModel {
	return &NullableTimeSliceModel{value: val, isSet: true}
}

func (v NullableTimeSliceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeSliceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


