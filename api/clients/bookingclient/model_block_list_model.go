/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// BlockListModel struct for BlockListModel
type BlockListModel struct {
	// List of blocks
	Blocks []BlockItemModel `json:"blocks"`
	// Total count of items
	Count int64 `json:"count"`
}

// NewBlockListModel instantiates a new BlockListModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockListModel(blocks []BlockItemModel, count int64) *BlockListModel {
	this := BlockListModel{}
	this.Blocks = blocks
	this.Count = count
	return &this
}

// NewBlockListModelWithDefaults instantiates a new BlockListModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockListModelWithDefaults() *BlockListModel {
	this := BlockListModel{}
	return &this
}

// GetBlocks returns the Blocks field value
func (o *BlockListModel) GetBlocks() []BlockItemModel {
	if o == nil {
		var ret []BlockItemModel
		return ret
	}

	return o.Blocks
}

// GetBlocksOk returns a tuple with the Blocks field value
// and a boolean to check if the value has been set.
func (o *BlockListModel) GetBlocksOk() (*[]BlockItemModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Blocks, true
}

// SetBlocks sets field value
func (o *BlockListModel) SetBlocks(v []BlockItemModel) {
	o.Blocks = v
}

// GetCount returns the Count field value
func (o *BlockListModel) GetCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *BlockListModel) GetCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *BlockListModel) SetCount(v int64) {
	o.Count = v
}

func (o BlockListModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["blocks"] = o.Blocks
	}
	if true {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableBlockListModel struct {
	value *BlockListModel
	isSet bool
}

func (v NullableBlockListModel) Get() *BlockListModel {
	return v.value
}

func (v *NullableBlockListModel) Set(val *BlockListModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockListModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockListModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockListModel(val *BlockListModel) *NullableBlockListModel {
	return &NullableBlockListModel{value: val, isSet: true}
}

func (v NullableBlockListModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockListModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


