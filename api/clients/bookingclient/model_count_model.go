/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// CountModel struct for CountModel
type CountModel struct {
	Count int64 `json:"count"`
}

// NewCountModel instantiates a new CountModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCountModel(count int64) *CountModel {
	this := CountModel{}
	this.Count = count
	return &this
}

// NewCountModelWithDefaults instantiates a new CountModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCountModelWithDefaults() *CountModel {
	this := CountModel{}
	return &this
}

// GetCount returns the Count field value
func (o *CountModel) GetCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *CountModel) GetCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *CountModel) SetCount(v int64) {
	o.Count = v
}

func (o CountModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableCountModel struct {
	value *CountModel
	isSet bool
}

func (v NullableCountModel) Get() *CountModel {
	return v.value
}

func (v *NullableCountModel) Set(val *CountModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCountModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCountModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCountModel(val *CountModel) *NullableCountModel {
	return &NullableCountModel{value: val, isSet: true}
}

func (v NullableCountModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCountModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


