/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// AssignedUnitModel struct for AssignedUnitModel
type AssignedUnitModel struct {
	Unit EmbeddedUnitModel `json:"unit"`
}

// NewAssignedUnitModel instantiates a new AssignedUnitModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignedUnitModel(unit EmbeddedUnitModel) *AssignedUnitModel {
	this := AssignedUnitModel{}
	this.Unit = unit
	return &this
}

// NewAssignedUnitModelWithDefaults instantiates a new AssignedUnitModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignedUnitModelWithDefaults() *AssignedUnitModel {
	this := AssignedUnitModel{}
	return &this
}

// GetUnit returns the Unit field value
func (o *AssignedUnitModel) GetUnit() EmbeddedUnitModel {
	if o == nil {
		var ret EmbeddedUnitModel
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *AssignedUnitModel) GetUnitOk() (*EmbeddedUnitModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *AssignedUnitModel) SetUnit(v EmbeddedUnitModel) {
	o.Unit = v
}

func (o AssignedUnitModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableAssignedUnitModel struct {
	value *AssignedUnitModel
	isSet bool
}

func (v NullableAssignedUnitModel) Get() *AssignedUnitModel {
	return v.value
}

func (v *NullableAssignedUnitModel) Set(val *AssignedUnitModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignedUnitModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignedUnitModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignedUnitModel(val *AssignedUnitModel) *NullableAssignedUnitModel {
	return &NullableAssignedUnitModel{value: val, isSet: true}
}

func (v NullableAssignedUnitModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignedUnitModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


