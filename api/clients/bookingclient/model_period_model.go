/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
)

// PeriodModel struct for PeriodModel
type PeriodModel struct {
	// The number of hours within the period
	Hours *int64 `json:"hours,omitempty"`
	// The number of days within the period
	Days *int32 `json:"days,omitempty"`
	// The number of months within the period
	Months *int32 `json:"months,omitempty"`
}

// NewPeriodModel instantiates a new PeriodModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeriodModel() *PeriodModel {
	this := PeriodModel{}
	return &this
}

// NewPeriodModelWithDefaults instantiates a new PeriodModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeriodModelWithDefaults() *PeriodModel {
	this := PeriodModel{}
	return &this
}

// GetHours returns the Hours field value if set, zero value otherwise.
func (o *PeriodModel) GetHours() int64 {
	if o == nil || o.Hours == nil {
		var ret int64
		return ret
	}
	return *o.Hours
}

// GetHoursOk returns a tuple with the Hours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeriodModel) GetHoursOk() (*int64, bool) {
	if o == nil || o.Hours == nil {
		return nil, false
	}
	return o.Hours, true
}

// HasHours returns a boolean if a field has been set.
func (o *PeriodModel) HasHours() bool {
	if o != nil && o.Hours != nil {
		return true
	}

	return false
}

// SetHours gets a reference to the given int64 and assigns it to the Hours field.
func (o *PeriodModel) SetHours(v int64) {
	o.Hours = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *PeriodModel) GetDays() int32 {
	if o == nil || o.Days == nil {
		var ret int32
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeriodModel) GetDaysOk() (*int32, bool) {
	if o == nil || o.Days == nil {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *PeriodModel) HasDays() bool {
	if o != nil && o.Days != nil {
		return true
	}

	return false
}

// SetDays gets a reference to the given int32 and assigns it to the Days field.
func (o *PeriodModel) SetDays(v int32) {
	o.Days = &v
}

// GetMonths returns the Months field value if set, zero value otherwise.
func (o *PeriodModel) GetMonths() int32 {
	if o == nil || o.Months == nil {
		var ret int32
		return ret
	}
	return *o.Months
}

// GetMonthsOk returns a tuple with the Months field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeriodModel) GetMonthsOk() (*int32, bool) {
	if o == nil || o.Months == nil {
		return nil, false
	}
	return o.Months, true
}

// HasMonths returns a boolean if a field has been set.
func (o *PeriodModel) HasMonths() bool {
	if o != nil && o.Months != nil {
		return true
	}

	return false
}

// SetMonths gets a reference to the given int32 and assigns it to the Months field.
func (o *PeriodModel) SetMonths(v int32) {
	o.Months = &v
}

func (o PeriodModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hours != nil {
		toSerialize["hours"] = o.Hours
	}
	if o.Days != nil {
		toSerialize["days"] = o.Days
	}
	if o.Months != nil {
		toSerialize["months"] = o.Months
	}
	return json.Marshal(toSerialize)
}

type NullablePeriodModel struct {
	value *PeriodModel
	isSet bool
}

func (v NullablePeriodModel) Get() *PeriodModel {
	return v.value
}

func (v *NullablePeriodModel) Set(val *PeriodModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePeriodModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePeriodModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeriodModel(val *PeriodModel) *NullablePeriodModel {
	return &NullablePeriodModel{value: val, isSet: true}
}

func (v NullablePeriodModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeriodModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


