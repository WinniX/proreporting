/*
 * apaleo Booking API
 *
 * Resources and methods to manage guest journeys.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bookingclient

import (
	"encoding/json"
	"time"
)

// BookingItemModel A booking holds all shared metadata for a set of reservations
type BookingItemModel struct {
	// Booking id
	Id string `json:"id"`
	// Group id
	GroupId *string `json:"groupId,omitempty"`
	Booker *BookerModel `json:"booker,omitempty"`
	PaymentAccount *PaymentAccountModel `json:"paymentAccount,omitempty"`
	// Additional information and comments
	Comment *string `json:"comment,omitempty"`
	// Additional information and comment by the booker
	BookerComment *string `json:"bookerComment,omitempty"`
	// Date of creation<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	Created time.Time `json:"created"`
	// Date of last modification<br />A date and time (without fractional second part) in UTC or with UTC offset as defined in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO8601:2004</a>
	Modified time.Time `json:"modified"`
	// Reservations within this booking
	Reservations *[]BookingReservationModel `json:"reservations,omitempty"`
}

// NewBookingItemModel instantiates a new BookingItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookingItemModel(id string, created time.Time, modified time.Time) *BookingItemModel {
	this := BookingItemModel{}
	this.Id = id
	this.Created = created
	this.Modified = modified
	return &this
}

// NewBookingItemModelWithDefaults instantiates a new BookingItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookingItemModelWithDefaults() *BookingItemModel {
	this := BookingItemModel{}
	return &this
}

// GetId returns the Id field value
func (o *BookingItemModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BookingItemModel) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BookingItemModel) SetId(v string) {
	o.Id = v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *BookingItemModel) GetGroupId() string {
	if o == nil || o.GroupId == nil {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingItemModel) GetGroupIdOk() (*string, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *BookingItemModel) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *BookingItemModel) SetGroupId(v string) {
	o.GroupId = &v
}

// GetBooker returns the Booker field value if set, zero value otherwise.
func (o *BookingItemModel) GetBooker() BookerModel {
	if o == nil || o.Booker == nil {
		var ret BookerModel
		return ret
	}
	return *o.Booker
}

// GetBookerOk returns a tuple with the Booker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingItemModel) GetBookerOk() (*BookerModel, bool) {
	if o == nil || o.Booker == nil {
		return nil, false
	}
	return o.Booker, true
}

// HasBooker returns a boolean if a field has been set.
func (o *BookingItemModel) HasBooker() bool {
	if o != nil && o.Booker != nil {
		return true
	}

	return false
}

// SetBooker gets a reference to the given BookerModel and assigns it to the Booker field.
func (o *BookingItemModel) SetBooker(v BookerModel) {
	o.Booker = &v
}

// GetPaymentAccount returns the PaymentAccount field value if set, zero value otherwise.
func (o *BookingItemModel) GetPaymentAccount() PaymentAccountModel {
	if o == nil || o.PaymentAccount == nil {
		var ret PaymentAccountModel
		return ret
	}
	return *o.PaymentAccount
}

// GetPaymentAccountOk returns a tuple with the PaymentAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingItemModel) GetPaymentAccountOk() (*PaymentAccountModel, bool) {
	if o == nil || o.PaymentAccount == nil {
		return nil, false
	}
	return o.PaymentAccount, true
}

// HasPaymentAccount returns a boolean if a field has been set.
func (o *BookingItemModel) HasPaymentAccount() bool {
	if o != nil && o.PaymentAccount != nil {
		return true
	}

	return false
}

// SetPaymentAccount gets a reference to the given PaymentAccountModel and assigns it to the PaymentAccount field.
func (o *BookingItemModel) SetPaymentAccount(v PaymentAccountModel) {
	o.PaymentAccount = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *BookingItemModel) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingItemModel) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *BookingItemModel) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *BookingItemModel) SetComment(v string) {
	o.Comment = &v
}

// GetBookerComment returns the BookerComment field value if set, zero value otherwise.
func (o *BookingItemModel) GetBookerComment() string {
	if o == nil || o.BookerComment == nil {
		var ret string
		return ret
	}
	return *o.BookerComment
}

// GetBookerCommentOk returns a tuple with the BookerComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingItemModel) GetBookerCommentOk() (*string, bool) {
	if o == nil || o.BookerComment == nil {
		return nil, false
	}
	return o.BookerComment, true
}

// HasBookerComment returns a boolean if a field has been set.
func (o *BookingItemModel) HasBookerComment() bool {
	if o != nil && o.BookerComment != nil {
		return true
	}

	return false
}

// SetBookerComment gets a reference to the given string and assigns it to the BookerComment field.
func (o *BookingItemModel) SetBookerComment(v string) {
	o.BookerComment = &v
}

// GetCreated returns the Created field value
func (o *BookingItemModel) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *BookingItemModel) GetCreatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *BookingItemModel) SetCreated(v time.Time) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *BookingItemModel) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *BookingItemModel) GetModifiedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *BookingItemModel) SetModified(v time.Time) {
	o.Modified = v
}

// GetReservations returns the Reservations field value if set, zero value otherwise.
func (o *BookingItemModel) GetReservations() []BookingReservationModel {
	if o == nil || o.Reservations == nil {
		var ret []BookingReservationModel
		return ret
	}
	return *o.Reservations
}

// GetReservationsOk returns a tuple with the Reservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingItemModel) GetReservationsOk() (*[]BookingReservationModel, bool) {
	if o == nil || o.Reservations == nil {
		return nil, false
	}
	return o.Reservations, true
}

// HasReservations returns a boolean if a field has been set.
func (o *BookingItemModel) HasReservations() bool {
	if o != nil && o.Reservations != nil {
		return true
	}

	return false
}

// SetReservations gets a reference to the given []BookingReservationModel and assigns it to the Reservations field.
func (o *BookingItemModel) SetReservations(v []BookingReservationModel) {
	o.Reservations = &v
}

func (o BookingItemModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if o.Booker != nil {
		toSerialize["booker"] = o.Booker
	}
	if o.PaymentAccount != nil {
		toSerialize["paymentAccount"] = o.PaymentAccount
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.BookerComment != nil {
		toSerialize["bookerComment"] = o.BookerComment
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	if o.Reservations != nil {
		toSerialize["reservations"] = o.Reservations
	}
	return json.Marshal(toSerialize)
}

type NullableBookingItemModel struct {
	value *BookingItemModel
	isSet bool
}

func (v NullableBookingItemModel) Get() *BookingItemModel {
	return v.value
}

func (v *NullableBookingItemModel) Set(val *BookingItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBookingItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBookingItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookingItemModel(val *BookingItemModel) *NullableBookingItemModel {
	return &NullableBookingItemModel{value: val, isSet: true}
}

func (v NullableBookingItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookingItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


